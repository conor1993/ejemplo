' ////////////////////////////////////////////////////////////////////////////////////////////////////////
' // This is generated code. 
' ////////////////////////////////////////////////////////////////////////////////////////////////////////
' // Code is generated using LLBLGen Pro version: 2.0.0.0
' // Code is generated on: lunes, 29 de enero de 2018 10:43:45
' // Code is generated using templates: SD.TemplateBindings.SharedTemplates.NET20
' // Templates vendor: Solutions Design.
' // Templates version: 
' ////////////////////////////////////////////////////////////////////////////////////////////////////////
Imports System
Imports System.Collections.Generic
Imports Integralab.ORM.EntityClasses
Imports Integralab.ORM.HelperClasses
Imports Integralab.ORM.CollectionClasses

Imports SD.LLBLGen.Pro.ORMSupportClasses

' __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
' __LLBLGENPRO_USER_CODE_REGION_END
Namespace Integralab.ORM.FactoryClasses
	
	''' <summary>
	''' Factory to create new, empty AcumuladoCuentasContablesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class AcumuladoCuentasContablesEntityFactory 
#Else
	<Serializable()> _
	Public Class AcumuladoCuentasContablesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty AcumuladoCuentasContablesEntity object.</summary>
		''' <returns>A new, empty AcumuladoCuentasContablesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New AcumuladoCuentasContablesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAcumuladoCuentasContables
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new AcumuladoCuentasContablesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAcumuladoCuentasContablesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.AcumuladoCuentasContablesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New AcumuladoCuentasContablesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "AcumuladoCuentasContablesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty AlmacenEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class AlmacenEntityFactory 
#Else
	<Serializable()> _
	Public Class AlmacenEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty AlmacenEntity object.</summary>
		''' <returns>A new, empty AlmacenEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New AlmacenEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAlmacen
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new AlmacenEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAlmacenUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.AlmacenEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New AlmacenCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "AlmacenEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty AlmacenCatalogoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class AlmacenCatalogoEntityFactory 
#Else
	<Serializable()> _
	Public Class AlmacenCatalogoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty AlmacenCatalogoEntity object.</summary>
		''' <returns>A new, empty AlmacenCatalogoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New AlmacenCatalogoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAlmacenCatalogo
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new AlmacenCatalogoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAlmacenCatalogoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.AlmacenCatalogoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New AlmacenCatalogoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "AlmacenCatalogoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty AlmacenesFamiliasEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class AlmacenesFamiliasEntityFactory 
#Else
	<Serializable()> _
	Public Class AlmacenesFamiliasEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty AlmacenesFamiliasEntity object.</summary>
		''' <returns>A new, empty AlmacenesFamiliasEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New AlmacenesFamiliasEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAlmacenesFamilias
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new AlmacenesFamiliasEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAlmacenesFamiliasUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.AlmacenesFamiliasEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New AlmacenesFamiliasCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "AlmacenesFamiliasEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty AlmacenesSucursalEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class AlmacenesSucursalEntityFactory 
#Else
	<Serializable()> _
	Public Class AlmacenesSucursalEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty AlmacenesSucursalEntity object.</summary>
		''' <returns>A new, empty AlmacenesSucursalEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New AlmacenesSucursalEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAlmacenesSucursal
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new AlmacenesSucursalEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAlmacenesSucursalUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.AlmacenesSucursalEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New AlmacenesSucursalCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "AlmacenesSucursalEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty AlmacenSucursalEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class AlmacenSucursalEntityFactory 
#Else
	<Serializable()> _
	Public Class AlmacenSucursalEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty AlmacenSucursalEntity object.</summary>
		''' <returns>A new, empty AlmacenSucursalEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New AlmacenSucursalEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAlmacenSucursal
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new AlmacenSucursalEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAlmacenSucursalUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.AlmacenSucursalEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New AlmacenSucursalCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "AlmacenSucursalEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty AplicMediEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class AplicMediEntityFactory 
#Else
	<Serializable()> _
	Public Class AplicMediEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty AplicMediEntity object.</summary>
		''' <returns>A new, empty AplicMediEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New AplicMediEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAplicMedi
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new AplicMediEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAplicMediUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.AplicMediEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New AplicMediCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "AplicMediEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty AplicMediDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class AplicMediDetEntityFactory 
#Else
	<Serializable()> _
	Public Class AplicMediDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty AplicMediDetEntity object.</summary>
		''' <returns>A new, empty AplicMediDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New AplicMediDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAplicMediDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new AplicMediDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAplicMediDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.AplicMediDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New AplicMediDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "AplicMediDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty AplicMediDetDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class AplicMediDetDetEntityFactory 
#Else
	<Serializable()> _
	Public Class AplicMediDetDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty AplicMediDetDetEntity object.</summary>
		''' <returns>A new, empty AplicMediDetDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New AplicMediDetDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAplicMediDetDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new AplicMediDetDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAplicMediDetDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.AplicMediDetDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New AplicMediDetDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "AplicMediDetDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty AutCreditoEmbEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class AutCreditoEmbEntityFactory 
#Else
	<Serializable()> _
	Public Class AutCreditoEmbEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty AutCreditoEmbEntity object.</summary>
		''' <returns>A new, empty AutCreditoEmbEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New AutCreditoEmbEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAutCreditoEmb
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new AutCreditoEmbEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAutCreditoEmbUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.AutCreditoEmbEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New AutCreditoEmbCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "AutCreditoEmbEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty AutorizaProcesosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class AutorizaProcesosEntityFactory 
#Else
	<Serializable()> _
	Public Class AutorizaProcesosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty AutorizaProcesosEntity object.</summary>
		''' <returns>A new, empty AutorizaProcesosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New AutorizaProcesosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAutorizaProcesos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new AutorizaProcesosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewAutorizaProcesosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.AutorizaProcesosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New AutorizaProcesosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "AutorizaProcesosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty BancosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class BancosEntityFactory 
#Else
	<Serializable()> _
	Public Class BancosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty BancosEntity object.</summary>
		''' <returns>A new, empty BancosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New BancosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewBancos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new BancosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewBancosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.BancosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New BancosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "BancosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty BeneficiarioEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class BeneficiarioEntityFactory 
#Else
	<Serializable()> _
	Public Class BeneficiarioEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty BeneficiarioEntity object.</summary>
		''' <returns>A new, empty BeneficiarioEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New BeneficiarioEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewBeneficiario
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new BeneficiarioEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewBeneficiarioUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.BeneficiarioEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New BeneficiarioCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "BeneficiarioEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty BitacoraFolioEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class BitacoraFolioEntityFactory 
#Else
	<Serializable()> _
	Public Class BitacoraFolioEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty BitacoraFolioEntity object.</summary>
		''' <returns>A new, empty BitacoraFolioEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New BitacoraFolioEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewBitacoraFolio
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new BitacoraFolioEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewBitacoraFolioUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.BitacoraFolioEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New BitacoraFolioCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "BitacoraFolioEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty BitacoraPvEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class BitacoraPvEntityFactory 
#Else
	<Serializable()> _
	Public Class BitacoraPvEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty BitacoraPvEntity object.</summary>
		''' <returns>A new, empty BitacoraPvEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New BitacoraPvEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewBitacoraPv
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new BitacoraPvEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewBitacoraPvUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.BitacoraPvEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New BitacoraPvCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "BitacoraPvEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabAplForEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabAplForEntityFactory 
#Else
	<Serializable()> _
	Public Class CabAplForEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabAplForEntity object.</summary>
		''' <returns>A new, empty CabAplForEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabAplForEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabAplFor
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabAplForEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabAplForUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabAplForEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabAplForCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabAplForEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabBalanceEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabBalanceEntityFactory 
#Else
	<Serializable()> _
	Public Class CabBalanceEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabBalanceEntity object.</summary>
		''' <returns>A new, empty CabBalanceEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabBalanceEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabBalance
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabBalanceEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabBalanceUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabBalanceEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabBalanceCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabBalanceEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabEdoResEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabEdoResEntityFactory 
#Else
	<Serializable()> _
	Public Class CabEdoResEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabEdoResEntity object.</summary>
		''' <returns>A new, empty CabEdoResEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabEdoResEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabEdoRes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabEdoResEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabEdoResUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabEdoResEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabEdoResCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabEdoResEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabFacturasEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabFacturasEntityFactory 
#Else
	<Serializable()> _
	Public Class CabFacturasEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabFacturasEntity object.</summary>
		''' <returns>A new, empty CabFacturasEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabFacturasEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabFacturas
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabFacturasEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabFacturasUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabFacturasEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabFacturasCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabFacturasEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabGasTransEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabGasTransEntityFactory 
#Else
	<Serializable()> _
	Public Class CabGasTransEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabGasTransEntity object.</summary>
		''' <returns>A new, empty CabGasTransEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabGasTransEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabGasTrans
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabGasTransEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabGasTransUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabGasTransEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabGasTransCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabGasTransEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabMediReimEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabMediReimEntityFactory 
#Else
	<Serializable()> _
	Public Class CabMediReimEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabMediReimEntity object.</summary>
		''' <returns>A new, empty CabMediReimEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabMediReimEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabMediReim
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabMediReimEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabMediReimUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabMediReimEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabMediReimCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabMediReimEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabMediTrabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabMediTrabEntityFactory 
#Else
	<Serializable()> _
	Public Class CabMediTrabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabMediTrabEntity object.</summary>
		''' <returns>A new, empty CabMediTrabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabMediTrabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabMediTrab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabMediTrabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabMediTrabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabMediTrabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabMediTrabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabMediTrabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabMovGanEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabMovGanEntityFactory 
#Else
	<Serializable()> _
	Public Class CabMovGanEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabMovGanEntity object.</summary>
		''' <returns>A new, empty CabMovGanEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabMovGanEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabMovGan
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabMovGanEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabMovGanUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabMovGanEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabMovGanCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabMovGanEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabPrepFormEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabPrepFormEntityFactory 
#Else
	<Serializable()> _
	Public Class CabPrepFormEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabPrepFormEntity object.</summary>
		''' <returns>A new, empty CabPrepFormEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabPrepFormEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabPrepForm
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabPrepFormEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabPrepFormUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabPrepFormEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabPrepFormCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabPrepFormEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabProMedEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabProMedEntityFactory 
#Else
	<Serializable()> _
	Public Class CabProMedEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabProMedEntity object.</summary>
		''' <returns>A new, empty CabProMedEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabProMedEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabProMed
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabProMedEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabProMedUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabProMedEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabProMedCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabProMedEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabRecCorEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabRecCorEntityFactory 
#Else
	<Serializable()> _
	Public Class CabRecCorEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabRecCorEntity object.</summary>
		''' <returns>A new, empty CabRecCorEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabRecCorEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabRecCor
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabRecCorEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabRecCorUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabRecCorEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabRecCorCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabRecCorEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CabRegComEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CabRegComEntityFactory 
#Else
	<Serializable()> _
	Public Class CabRegComEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CabRegComEntity object.</summary>
		''' <returns>A new, empty CabRegComEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CabRegComEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabRegCom
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CabRegComEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCabRegComUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CabRegComEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CabRegComCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CabRegComEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatAgrupadoresBalGralEdoResEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatAgrupadoresBalGralEdoResEntityFactory 
#Else
	<Serializable()> _
	Public Class CatAgrupadoresBalGralEdoResEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatAgrupadoresBalGralEdoResEntity object.</summary>
		''' <returns>A new, empty CatAgrupadoresBalGralEdoResEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatAgrupadoresBalGralEdoResEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatAgrupadoresBalGralEdoRes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatAgrupadoresBalGralEdoResEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatAgrupadoresBalGralEdoResUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatAgrupadoresBalGralEdoResEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatAgrupadoresBalGralEdoResCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatAgrupadoresBalGralEdoResEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatDeptosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatDeptosEntityFactory 
#Else
	<Serializable()> _
	Public Class CatDeptosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatDeptosEntity object.</summary>
		''' <returns>A new, empty CatDeptosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatDeptosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatDeptos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatDeptosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatDeptosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatDeptosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatDeptosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatDeptosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatIntroductoresEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatIntroductoresEntityFactory 
#Else
	<Serializable()> _
	Public Class CatIntroductoresEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatIntroductoresEntity object.</summary>
		''' <returns>A new, empty CatIntroductoresEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatIntroductoresEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatIntroductores
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatIntroductoresEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatIntroductoresUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatIntroductoresEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatIntroductoresCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatIntroductoresEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatLugaresDeCompraEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatLugaresDeCompraEntityFactory 
#Else
	<Serializable()> _
	Public Class CatLugaresDeCompraEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatLugaresDeCompraEntity object.</summary>
		''' <returns>A new, empty CatLugaresDeCompraEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatLugaresDeCompraEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatLugaresDeCompra
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatLugaresDeCompraEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatLugaresDeCompraUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatLugaresDeCompraEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatLugaresDeCompraCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatLugaresDeCompraEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatLugComEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatLugComEntityFactory 
#Else
	<Serializable()> _
	Public Class CatLugComEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatLugComEntity object.</summary>
		''' <returns>A new, empty CatLugComEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatLugComEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatLugCom
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatLugComEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatLugComUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatLugComEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatLugComCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatLugComEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatMovGanEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatMovGanEntityFactory 
#Else
	<Serializable()> _
	Public Class CatMovGanEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatMovGanEntity object.</summary>
		''' <returns>A new, empty CatMovGanEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatMovGanEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatMovGan
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatMovGanEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatMovGanUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatMovGanEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatMovGanCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatMovGanEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatMovimientosAlmacenPvEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatMovimientosAlmacenPvEntityFactory 
#Else
	<Serializable()> _
	Public Class CatMovimientosAlmacenPvEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatMovimientosAlmacenPvEntity object.</summary>
		''' <returns>A new, empty CatMovimientosAlmacenPvEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatMovimientosAlmacenPvEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatMovimientosAlmacenPv
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatMovimientosAlmacenPvEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatMovimientosAlmacenPvUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatMovimientosAlmacenPvEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatMovimientosAlmacenPvCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatMovimientosAlmacenPvEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatNutrientesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatNutrientesEntityFactory 
#Else
	<Serializable()> _
	Public Class CatNutrientesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatNutrientesEntity object.</summary>
		''' <returns>A new, empty CatNutrientesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatNutrientesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatNutrientes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatNutrientesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatNutrientesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatNutrientesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatNutrientesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatNutrientesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatPrexCortEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatPrexCortEntityFactory 
#Else
	<Serializable()> _
	Public Class CatPrexCortEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatPrexCortEntity object.</summary>
		''' <returns>A new, empty CatPrexCortEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatPrexCortEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatPrexCort
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatPrexCortEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatPrexCortUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatPrexCortEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatPrexCortCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatPrexCortEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatPrexProdEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatPrexProdEntityFactory 
#Else
	<Serializable()> _
	Public Class CatPrexProdEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatPrexProdEntity object.</summary>
		''' <returns>A new, empty CatPrexProdEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatPrexProdEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatPrexProd
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatPrexProdEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatPrexProdUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatPrexProdEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatPrexProdCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatPrexProdEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatProveedoresEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatProveedoresEntityFactory 
#Else
	<Serializable()> _
	Public Class CatProveedoresEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatProveedoresEntity object.</summary>
		''' <returns>A new, empty CatProveedoresEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatProveedoresEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatProveedores
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatProveedoresEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatProveedoresUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatProveedoresEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatProveedoresCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatProveedoresEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatRastrosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatRastrosEntityFactory 
#Else
	<Serializable()> _
	Public Class CatRastrosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatRastrosEntity object.</summary>
		''' <returns>A new, empty CatRastrosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatRastrosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatRastros
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatRastrosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatRastrosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatRastrosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatRastrosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatRastrosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CatTipNotasEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CatTipNotasEntityFactory 
#Else
	<Serializable()> _
	Public Class CatTipNotasEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CatTipNotasEntity object.</summary>
		''' <returns>A new, empty CatTipNotasEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CatTipNotasEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatTipNotas
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CatTipNotasEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCatTipNotasUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CatTipNotasEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CatTipNotasCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CatTipNotasEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CfgCtrlCtasEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CfgCtrlCtasEntityFactory 
#Else
	<Serializable()> _
	Public Class CfgCtrlCtasEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CfgCtrlCtasEntity object.</summary>
		''' <returns>A new, empty CfgCtrlCtasEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CfgCtrlCtasEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCfgCtrlCtas
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CfgCtrlCtasEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCfgCtrlCtasUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CfgCtrlCtasEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CfgCtrlCtasCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CfgCtrlCtasEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ChequeEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ChequeEntityFactory 
#Else
	<Serializable()> _
	Public Class ChequeEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ChequeEntity object.</summary>
		''' <returns>A new, empty ChequeEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ChequeEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCheque
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ChequeEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewChequeUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ChequeEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ChequeCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ChequeEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ChequeDevueltoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ChequeDevueltoEntityFactory 
#Else
	<Serializable()> _
	Public Class ChequeDevueltoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ChequeDevueltoEntity object.</summary>
		''' <returns>A new, empty ChequeDevueltoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ChequeDevueltoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewChequeDevuelto
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ChequeDevueltoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewChequeDevueltoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ChequeDevueltoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ChequeDevueltoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ChequeDevueltoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ChequesPosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ChequesPosEntityFactory 
#Else
	<Serializable()> _
	Public Class ChequesPosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ChequesPosEntity object.</summary>
		''' <returns>A new, empty ChequesPosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ChequesPosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewChequesPos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ChequesPosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewChequesPosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ChequesPosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ChequesPosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ChequesPosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CierreFicticioEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CierreFicticioEntityFactory 
#Else
	<Serializable()> _
	Public Class CierreFicticioEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CierreFicticioEntity object.</summary>
		''' <returns>A new, empty CierreFicticioEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CierreFicticioEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCierreFicticio
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CierreFicticioEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCierreFicticioUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CierreFicticioEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CierreFicticioCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CierreFicticioEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CierreLoteEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CierreLoteEntityFactory 
#Else
	<Serializable()> _
	Public Class CierreLoteEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CierreLoteEntity object.</summary>
		''' <returns>A new, empty CierreLoteEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CierreLoteEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCierreLote
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CierreLoteEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCierreLoteUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CierreLoteEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CierreLoteCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CierreLoteEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CiudadEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CiudadEntityFactory 
#Else
	<Serializable()> _
	Public Class CiudadEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CiudadEntity object.</summary>
		''' <returns>A new, empty CiudadEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CiudadEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCiudad
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CiudadEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCiudadUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CiudadEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CiudadCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CiudadEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ClasificadorDeEstadosFinancierosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ClasificadorDeEstadosFinancierosEntityFactory 
#Else
	<Serializable()> _
	Public Class ClasificadorDeEstadosFinancierosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ClasificadorDeEstadosFinancierosEntity object.</summary>
		''' <returns>A new, empty ClasificadorDeEstadosFinancierosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ClasificadorDeEstadosFinancierosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewClasificadorDeEstadosFinancieros
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ClasificadorDeEstadosFinancierosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewClasificadorDeEstadosFinancierosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ClasificadorDeEstadosFinancierosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ClasificadorDeEstadosFinancierosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ClasificadorDeEstadosFinancierosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ClienteEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ClienteEntityFactory 
#Else
	<Serializable()> _
	Public Class ClienteEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ClienteEntity object.</summary>
		''' <returns>A new, empty ClienteEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ClienteEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCliente
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ClienteEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewClienteUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ClienteEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ClienteCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ClienteEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ComicionistaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ComicionistaEntityFactory 
#Else
	<Serializable()> _
	Public Class ComicionistaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ComicionistaEntity object.</summary>
		''' <returns>A new, empty ComicionistaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ComicionistaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewComicionista
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ComicionistaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewComicionistaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ComicionistaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ComicionistaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ComicionistaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ConceptoCajaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ConceptoCajaEntityFactory 
#Else
	<Serializable()> _
	Public Class ConceptoCajaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ConceptoCajaEntity object.</summary>
		''' <returns>A new, empty ConceptoCajaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ConceptoCajaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConceptoCaja
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ConceptoCajaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConceptoCajaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ConceptoCajaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ConceptoCajaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ConceptoCajaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ConceptoFlujoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ConceptoFlujoEntityFactory 
#Else
	<Serializable()> _
	Public Class ConceptoFlujoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ConceptoFlujoEntity object.</summary>
		''' <returns>A new, empty ConceptoFlujoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ConceptoFlujoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConceptoFlujo
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ConceptoFlujoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConceptoFlujoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ConceptoFlujoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ConceptoFlujoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ConceptoFlujoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ConceptoFlujoCuentaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ConceptoFlujoCuentaEntityFactory 
#Else
	<Serializable()> _
	Public Class ConceptoFlujoCuentaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ConceptoFlujoCuentaEntity object.</summary>
		''' <returns>A new, empty ConceptoFlujoCuentaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ConceptoFlujoCuentaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConceptoFlujoCuenta
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ConceptoFlujoCuentaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConceptoFlujoCuentaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ConceptoFlujoCuentaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ConceptoFlujoCuentaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ConceptoFlujoCuentaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ConCfgCtasEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ConCfgCtasEntityFactory 
#Else
	<Serializable()> _
	Public Class ConCfgCtasEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ConCfgCtasEntity object.</summary>
		''' <returns>A new, empty ConCfgCtasEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ConCfgCtasEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConCfgCtas
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ConCfgCtasEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConCfgCtasUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ConCfgCtasEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ConCfgCtasCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ConCfgCtasEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CondicionesPagoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CondicionesPagoEntityFactory 
#Else
	<Serializable()> _
	Public Class CondicionesPagoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CondicionesPagoEntity object.</summary>
		''' <returns>A new, empty CondicionesPagoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CondicionesPagoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCondicionesPago
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CondicionesPagoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCondicionesPagoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CondicionesPagoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CondicionesPagoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CondicionesPagoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ConfigGanEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ConfigGanEntityFactory 
#Else
	<Serializable()> _
	Public Class ConfigGanEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ConfigGanEntity object.</summary>
		''' <returns>A new, empty ConfigGanEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ConfigGanEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConfigGan
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ConfigGanEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConfigGanUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ConfigGanEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ConfigGanCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ConfigGanEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ConfigPuntoVtaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ConfigPuntoVtaEntityFactory 
#Else
	<Serializable()> _
	Public Class ConfigPuntoVtaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ConfigPuntoVtaEntity object.</summary>
		''' <returns>A new, empty ConfigPuntoVtaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ConfigPuntoVtaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConfigPuntoVta
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ConfigPuntoVtaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConfigPuntoVtaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ConfigPuntoVtaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ConfigPuntoVtaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ConfigPuntoVtaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ConfiguracionChequesImpEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ConfiguracionChequesImpEntityFactory 
#Else
	<Serializable()> _
	Public Class ConfiguracionChequesImpEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ConfiguracionChequesImpEntity object.</summary>
		''' <returns>A new, empty ConfiguracionChequesImpEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ConfiguracionChequesImpEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConfiguracionChequesImp
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ConfiguracionChequesImpEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConfiguracionChequesImpUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ConfiguracionChequesImpEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ConfiguracionChequesImpCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ConfiguracionChequesImpEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ConfiguracionFacturaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ConfiguracionFacturaEntityFactory 
#Else
	<Serializable()> _
	Public Class ConfiguracionFacturaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ConfiguracionFacturaEntity object.</summary>
		''' <returns>A new, empty ConfiguracionFacturaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ConfiguracionFacturaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConfiguracionFactura
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ConfiguracionFacturaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConfiguracionFacturaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ConfiguracionFacturaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ConfiguracionFacturaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ConfiguracionFacturaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ConfiguracionLecturaEtiquetaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ConfiguracionLecturaEtiquetaEntityFactory 
#Else
	<Serializable()> _
	Public Class ConfiguracionLecturaEtiquetaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ConfiguracionLecturaEtiquetaEntity object.</summary>
		''' <returns>A new, empty ConfiguracionLecturaEtiquetaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ConfiguracionLecturaEtiquetaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConfiguracionLecturaEtiqueta
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ConfiguracionLecturaEtiquetaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConfiguracionLecturaEtiquetaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ConfiguracionLecturaEtiquetaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ConfiguracionLecturaEtiquetaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ConfiguracionLecturaEtiquetaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ConLotSacEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ConLotSacEntityFactory 
#Else
	<Serializable()> _
	Public Class ConLotSacEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ConLotSacEntity object.</summary>
		''' <returns>A new, empty ConLotSacEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ConLotSacEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConLotSac
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ConLotSacEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConLotSacUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ConLotSacEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ConLotSacCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ConLotSacEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ConMesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ConMesEntityFactory 
#Else
	<Serializable()> _
	Public Class ConMesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ConMesEntity object.</summary>
		''' <returns>A new, empty ConMesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ConMesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConMes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ConMesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewConMesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ConMesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ConMesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ConMesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ControlTurnoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ControlTurnoEntityFactory 
#Else
	<Serializable()> _
	Public Class ControlTurnoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ControlTurnoEntity object.</summary>
		''' <returns>A new, empty ControlTurnoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ControlTurnoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewControlTurno
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ControlTurnoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewControlTurnoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ControlTurnoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ControlTurnoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ControlTurnoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CostoIndirectoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CostoIndirectoEntityFactory 
#Else
	<Serializable()> _
	Public Class CostoIndirectoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CostoIndirectoEntity object.</summary>
		''' <returns>A new, empty CostoIndirectoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CostoIndirectoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCostoIndirecto
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CostoIndirectoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCostoIndirectoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CostoIndirectoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CostoIndirectoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CostoIndirectoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CostoProductoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CostoProductoEntityFactory 
#Else
	<Serializable()> _
	Public Class CostoProductoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CostoProductoEntity object.</summary>
		''' <returns>A new, empty CostoProductoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CostoProductoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCostoProducto
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CostoProductoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCostoProductoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CostoProductoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CostoProductoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CostoProductoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CostoProductoProveedorEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CostoProductoProveedorEntityFactory 
#Else
	<Serializable()> _
	Public Class CostoProductoProveedorEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CostoProductoProveedorEntity object.</summary>
		''' <returns>A new, empty CostoProductoProveedorEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CostoProductoProveedorEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCostoProductoProveedor
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CostoProductoProveedorEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCostoProductoProveedorUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CostoProductoProveedorEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CostoProductoProveedorCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CostoProductoProveedorEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CotizacionServicioEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CotizacionServicioEntityFactory 
#Else
	<Serializable()> _
	Public Class CotizacionServicioEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CotizacionServicioEntity object.</summary>
		''' <returns>A new, empty CotizacionServicioEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CotizacionServicioEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCotizacionServicio
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CotizacionServicioEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCotizacionServicioUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CotizacionServicioEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CotizacionServicioCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CotizacionServicioEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CotizacionServicioDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CotizacionServicioDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class CotizacionServicioDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CotizacionServicioDetalleEntity object.</summary>
		''' <returns>A new, empty CotizacionServicioDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CotizacionServicioDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCotizacionServicioDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CotizacionServicioDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCotizacionServicioDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CotizacionServicioDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CotizacionServicioDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CotizacionServicioDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CuentaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CuentaEntityFactory 
#Else
	<Serializable()> _
	Public Class CuentaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CuentaEntity object.</summary>
		''' <returns>A new, empty CuentaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CuentaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCuenta
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CuentaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCuentaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CuentaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CuentaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CuentaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CuentaContableEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CuentaContableEntityFactory 
#Else
	<Serializable()> _
	Public Class CuentaContableEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CuentaContableEntity object.</summary>
		''' <returns>A new, empty CuentaContableEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CuentaContableEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCuentaContable
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CuentaContableEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCuentaContableUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CuentaContableEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CuentaContableCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CuentaContableEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty CuentasFiscalEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class CuentasFiscalEntityFactory 
#Else
	<Serializable()> _
	Public Class CuentasFiscalEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty CuentasFiscalEntity object.</summary>
		''' <returns>A new, empty CuentasFiscalEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New CuentasFiscalEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCuentasFiscal
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new CuentasFiscalEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewCuentasFiscalUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.CuentasFiscalEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New CuentasFiscalCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "CuentasFiscalEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetAlimentosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetAlimentosEntityFactory 
#Else
	<Serializable()> _
	Public Class DetAlimentosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetAlimentosEntity object.</summary>
		''' <returns>A new, empty DetAlimentosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetAlimentosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetAlimentos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetAlimentosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetAlimentosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetAlimentosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetAlimentosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetAlimentosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetalleClasificadordeEstadosFinancierosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetalleClasificadordeEstadosFinancierosEntityFactory 
#Else
	<Serializable()> _
	Public Class DetalleClasificadordeEstadosFinancierosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetalleClasificadordeEstadosFinancierosEntity object.</summary>
		''' <returns>A new, empty DetalleClasificadordeEstadosFinancierosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetalleClasificadordeEstadosFinancierosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetalleClasificadordeEstadosFinancieros
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetalleClasificadordeEstadosFinancierosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetalleClasificadordeEstadosFinancierosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetalleClasificadordeEstadosFinancierosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetalleClasificadordeEstadosFinancierosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetalleClasificadordeEstadosFinancierosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetalleKitPvEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetalleKitPvEntityFactory 
#Else
	<Serializable()> _
	Public Class DetalleKitPvEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetalleKitPvEntity object.</summary>
		''' <returns>A new, empty DetalleKitPvEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetalleKitPvEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetalleKitPv
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetalleKitPvEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetalleKitPvUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetalleKitPvEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetalleKitPvCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetalleKitPvEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetAplForEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetAplForEntityFactory 
#Else
	<Serializable()> _
	Public Class DetAplForEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetAplForEntity object.</summary>
		''' <returns>A new, empty DetAplForEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetAplForEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetAplFor
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetAplForEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetAplForUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetAplForEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetAplForCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetAplForEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetBalanceEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetBalanceEntityFactory 
#Else
	<Serializable()> _
	Public Class DetBalanceEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetBalanceEntity object.</summary>
		''' <returns>A new, empty DetBalanceEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetBalanceEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetBalance
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetBalanceEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetBalanceUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetBalanceEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetBalanceCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetBalanceEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetDproMedEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetDproMedEntityFactory 
#Else
	<Serializable()> _
	Public Class DetDproMedEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetDproMedEntity object.</summary>
		''' <returns>A new, empty DetDproMedEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetDproMedEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetDproMed
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetDproMedEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetDproMedUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetDproMedEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetDproMedCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetDproMedEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetEdoResEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetEdoResEntityFactory 
#Else
	<Serializable()> _
	Public Class DetEdoResEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetEdoResEntity object.</summary>
		''' <returns>A new, empty DetEdoResEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetEdoResEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetEdoRes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetEdoResEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetEdoResUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetEdoResEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetEdoResCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetEdoResEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetFacturasEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetFacturasEntityFactory 
#Else
	<Serializable()> _
	Public Class DetFacturasEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetFacturasEntity object.</summary>
		''' <returns>A new, empty DetFacturasEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetFacturasEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetFacturas
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetFacturasEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetFacturasUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetFacturasEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetFacturasCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetFacturasEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetGasTransEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetGasTransEntityFactory 
#Else
	<Serializable()> _
	Public Class DetGasTransEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetGasTransEntity object.</summary>
		''' <returns>A new, empty DetGasTransEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetGasTransEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetGasTrans
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetGasTransEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetGasTransUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetGasTransEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetGasTransCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetGasTransEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetMovGanEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetMovGanEntityFactory 
#Else
	<Serializable()> _
	Public Class DetMovGanEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetMovGanEntity object.</summary>
		''' <returns>A new, empty DetMovGanEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetMovGanEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetMovGan
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetMovGanEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetMovGanUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetMovGanEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetMovGanCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetMovGanEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetPrepFormEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetPrepFormEntityFactory 
#Else
	<Serializable()> _
	Public Class DetPrepFormEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetPrepFormEntity object.</summary>
		''' <returns>A new, empty DetPrepFormEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetPrepFormEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetPrepForm
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetPrepFormEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetPrepFormUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetPrepFormEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetPrepFormCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetPrepFormEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetPrepFormLoteEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetPrepFormLoteEntityFactory 
#Else
	<Serializable()> _
	Public Class DetPrepFormLoteEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetPrepFormLoteEntity object.</summary>
		''' <returns>A new, empty DetPrepFormLoteEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetPrepFormLoteEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetPrepFormLote
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetPrepFormLoteEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetPrepFormLoteUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetPrepFormLoteEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetPrepFormLoteCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetPrepFormLoteEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetProMedEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetProMedEntityFactory 
#Else
	<Serializable()> _
	Public Class DetProMedEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetProMedEntity object.</summary>
		''' <returns>A new, empty DetProMedEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetProMedEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetProMed
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetProMedEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetProMedUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetProMedEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetProMedCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetProMedEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetRecCorEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetRecCorEntityFactory 
#Else
	<Serializable()> _
	Public Class DetRecCorEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetRecCorEntity object.</summary>
		''' <returns>A new, empty DetRecCorEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetRecCorEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetRecCor
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetRecCorEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetRecCorUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetRecCorEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetRecCorCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetRecCorEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DetRegComEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DetRegComEntityFactory 
#Else
	<Serializable()> _
	Public Class DetRegComEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DetRegComEntity object.</summary>
		''' <returns>A new, empty DetRegComEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DetRegComEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetRegCom
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DetRegComEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDetRegComUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DetRegComEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DetRegComCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DetRegComEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DevolucionProductosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DevolucionProductosEntityFactory 
#Else
	<Serializable()> _
	Public Class DevolucionProductosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DevolucionProductosEntity object.</summary>
		''' <returns>A new, empty DevolucionProductosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DevolucionProductosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDevolucionProductos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DevolucionProductosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDevolucionProductosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DevolucionProductosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DevolucionProductosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DevolucionProductosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DocumentoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DocumentoEntityFactory 
#Else
	<Serializable()> _
	Public Class DocumentoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DocumentoEntity object.</summary>
		''' <returns>A new, empty DocumentoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DocumentoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumento
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DocumentoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DocumentoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DocumentoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DocumentoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DocumentoDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DocumentoDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class DocumentoDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DocumentoDetalleEntity object.</summary>
		''' <returns>A new, empty DocumentoDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DocumentoDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentoDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DocumentoDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentoDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DocumentoDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DocumentoDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DocumentoDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DocumentoImagenEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DocumentoImagenEntityFactory 
#Else
	<Serializable()> _
	Public Class DocumentoImagenEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DocumentoImagenEntity object.</summary>
		''' <returns>A new, empty DocumentoImagenEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DocumentoImagenEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentoImagen
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DocumentoImagenEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentoImagenUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DocumentoImagenEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DocumentoImagenCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DocumentoImagenEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DocumentoTextoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DocumentoTextoEntityFactory 
#Else
	<Serializable()> _
	Public Class DocumentoTextoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DocumentoTextoEntity object.</summary>
		''' <returns>A new, empty DocumentoTextoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DocumentoTextoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentoTexto
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DocumentoTextoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentoTextoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DocumentoTextoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DocumentoTextoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DocumentoTextoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DocumentoTipoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DocumentoTipoEntityFactory 
#Else
	<Serializable()> _
	Public Class DocumentoTipoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DocumentoTipoEntity object.</summary>
		''' <returns>A new, empty DocumentoTipoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DocumentoTipoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentoTipo
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DocumentoTipoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentoTipoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DocumentoTipoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DocumentoTipoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DocumentoTipoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DocumentoTipoCampoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DocumentoTipoCampoEntityFactory 
#Else
	<Serializable()> _
	Public Class DocumentoTipoCampoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DocumentoTipoCampoEntity object.</summary>
		''' <returns>A new, empty DocumentoTipoCampoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DocumentoTipoCampoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentoTipoCampo
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DocumentoTipoCampoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDocumentoTipoCampoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DocumentoTipoCampoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DocumentoTipoCampoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DocumentoTipoCampoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DomicilioFiscalEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DomicilioFiscalEntityFactory 
#Else
	<Serializable()> _
	Public Class DomicilioFiscalEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DomicilioFiscalEntity object.</summary>
		''' <returns>A new, empty DomicilioFiscalEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DomicilioFiscalEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDomicilioFiscal
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DomicilioFiscalEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDomicilioFiscalUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DomicilioFiscalEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DomicilioFiscalCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DomicilioFiscalEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty DomicilioFiscalesClientesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class DomicilioFiscalesClientesEntityFactory 
#Else
	<Serializable()> _
	Public Class DomicilioFiscalesClientesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty DomicilioFiscalesClientesEntity object.</summary>
		''' <returns>A new, empty DomicilioFiscalesClientesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New DomicilioFiscalesClientesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDomicilioFiscalesClientes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new DomicilioFiscalesClientesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewDomicilioFiscalesClientesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.DomicilioFiscalesClientesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New DomicilioFiscalesClientesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "DomicilioFiscalesClientesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ECtSatcatBancosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ECtSatcatBancosEntityFactory 
#Else
	<Serializable()> _
	Public Class ECtSatcatBancosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ECtSatcatBancosEntity object.</summary>
		''' <returns>A new, empty ECtSatcatBancosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ECtSatcatBancosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewECtSatcatBancos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ECtSatcatBancosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewECtSatcatBancosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ECtSatcatBancosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ECtSatcatBancosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ECtSatcatBancosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty EstadoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class EstadoEntityFactory 
#Else
	<Serializable()> _
	Public Class EstadoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty EstadoEntity object.</summary>
		''' <returns>A new, empty EstadoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New EstadoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewEstado
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new EstadoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewEstadoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.EstadoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New EstadoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "EstadoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty FacturaFoliosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class FacturaFoliosEntityFactory 
#Else
	<Serializable()> _
	Public Class FacturaFoliosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty FacturaFoliosEntity object.</summary>
		''' <returns>A new, empty FacturaFoliosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New FacturaFoliosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFacturaFolios
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new FacturaFoliosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFacturaFoliosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.FacturaFoliosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New FacturaFoliosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "FacturaFoliosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty FacturasClientesCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class FacturasClientesCabEntityFactory 
#Else
	<Serializable()> _
	Public Class FacturasClientesCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty FacturasClientesCabEntity object.</summary>
		''' <returns>A new, empty FacturasClientesCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New FacturasClientesCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFacturasClientesCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new FacturasClientesCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFacturasClientesCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.FacturasClientesCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New FacturasClientesCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "FacturasClientesCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty FacturasClientesDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class FacturasClientesDetEntityFactory 
#Else
	<Serializable()> _
	Public Class FacturasClientesDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty FacturasClientesDetEntity object.</summary>
		''' <returns>A new, empty FacturasClientesDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New FacturasClientesDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFacturasClientesDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new FacturasClientesDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFacturasClientesDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.FacturasClientesDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New FacturasClientesDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "FacturasClientesDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty FacturasClientesDetProductosTotalesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class FacturasClientesDetProductosTotalesEntityFactory 
#Else
	<Serializable()> _
	Public Class FacturasClientesDetProductosTotalesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty FacturasClientesDetProductosTotalesEntity object.</summary>
		''' <returns>A new, empty FacturasClientesDetProductosTotalesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New FacturasClientesDetProductosTotalesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFacturasClientesDetProductosTotales
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new FacturasClientesDetProductosTotalesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFacturasClientesDetProductosTotalesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.FacturasClientesDetProductosTotalesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New FacturasClientesDetProductosTotalesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "FacturasClientesDetProductosTotalesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty FolioEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class FolioEntityFactory 
#Else
	<Serializable()> _
	Public Class FolioEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty FolioEntity object.</summary>
		''' <returns>A new, empty FolioEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New FolioEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFolio
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new FolioEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFolioUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.FolioEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New FolioCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "FolioEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty FolioFacturaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class FolioFacturaEntityFactory 
#Else
	<Serializable()> _
	Public Class FolioFacturaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty FolioFacturaEntity object.</summary>
		''' <returns>A new, empty FolioFacturaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New FolioFacturaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFolioFactura
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new FolioFacturaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFolioFacturaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.FolioFacturaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New FolioFacturaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "FolioFacturaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty FormaPagoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class FormaPagoEntityFactory 
#Else
	<Serializable()> _
	Public Class FormaPagoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty FormaPagoEntity object.</summary>
		''' <returns>A new, empty FormaPagoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New FormaPagoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFormaPago
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new FormaPagoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewFormaPagoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.FormaPagoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New FormaPagoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "FormaPagoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty GastosDepartamentosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class GastosDepartamentosEntityFactory 
#Else
	<Serializable()> _
	Public Class GastosDepartamentosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty GastosDepartamentosEntity object.</summary>
		''' <returns>A new, empty GastosDepartamentosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New GastosDepartamentosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewGastosDepartamentos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new GastosDepartamentosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewGastosDepartamentosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.GastosDepartamentosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New GastosDepartamentosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "GastosDepartamentosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty HistorialCambiosFechaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class HistorialCambiosFechaEntityFactory 
#Else
	<Serializable()> _
	Public Class HistorialCambiosFechaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty HistorialCambiosFechaEntity object.</summary>
		''' <returns>A new, empty HistorialCambiosFechaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New HistorialCambiosFechaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewHistorialCambiosFecha
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new HistorialCambiosFechaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewHistorialCambiosFechaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.HistorialCambiosFechaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New HistorialCambiosFechaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "HistorialCambiosFechaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty IngresoCajaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class IngresoCajaEntityFactory 
#Else
	<Serializable()> _
	Public Class IngresoCajaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty IngresoCajaEntity object.</summary>
		''' <returns>A new, empty IngresoCajaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New IngresoCajaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewIngresoCaja
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new IngresoCajaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewIngresoCajaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.IngresoCajaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New IngresoCajaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "IngresoCajaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty InventarioAlmacenEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class InventarioAlmacenEntityFactory 
#Else
	<Serializable()> _
	Public Class InventarioAlmacenEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty InventarioAlmacenEntity object.</summary>
		''' <returns>A new, empty InventarioAlmacenEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New InventarioAlmacenEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInventarioAlmacen
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new InventarioAlmacenEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInventarioAlmacenUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.InventarioAlmacenEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New InventarioAlmacenCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "InventarioAlmacenEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty inventarioAlmacenLotesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class inventarioAlmacenLotesEntityFactory 
#Else
	<Serializable()> _
	Public Class inventarioAlmacenLotesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty inventarioAlmacenLotesEntity object.</summary>
		''' <returns>A new, empty inventarioAlmacenLotesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New inventarioAlmacenLotesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewinventarioAlmacenLotes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new inventarioAlmacenLotesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewinventarioAlmacenLotesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.inventarioAlmacenLotesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New inventarioAlmacenLotesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "inventarioAlmacenLotesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty InventarioConfiguracionEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class InventarioConfiguracionEntityFactory 
#Else
	<Serializable()> _
	Public Class InventarioConfiguracionEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty InventarioConfiguracionEntity object.</summary>
		''' <returns>A new, empty InventarioConfiguracionEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New InventarioConfiguracionEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInventarioConfiguracion
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new InventarioConfiguracionEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInventarioConfiguracionUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.InventarioConfiguracionEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New InventarioConfiguracionCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "InventarioConfiguracionEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty InventarioFisicoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class InventarioFisicoEntityFactory 
#Else
	<Serializable()> _
	Public Class InventarioFisicoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty InventarioFisicoEntity object.</summary>
		''' <returns>A new, empty InventarioFisicoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New InventarioFisicoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInventarioFisico
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new InventarioFisicoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInventarioFisicoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.InventarioFisicoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New InventarioFisicoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "InventarioFisicoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty InventarioMovimientoAlmacenEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class InventarioMovimientoAlmacenEntityFactory 
#Else
	<Serializable()> _
	Public Class InventarioMovimientoAlmacenEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty InventarioMovimientoAlmacenEntity object.</summary>
		''' <returns>A new, empty InventarioMovimientoAlmacenEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New InventarioMovimientoAlmacenEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInventarioMovimientoAlmacen
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new InventarioMovimientoAlmacenEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInventarioMovimientoAlmacenUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.InventarioMovimientoAlmacenEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New InventarioMovimientoAlmacenCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "InventarioMovimientoAlmacenEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty InventarioMovimientoAlmacenDetallesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class InventarioMovimientoAlmacenDetallesEntityFactory 
#Else
	<Serializable()> _
	Public Class InventarioMovimientoAlmacenDetallesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty InventarioMovimientoAlmacenDetallesEntity object.</summary>
		''' <returns>A new, empty InventarioMovimientoAlmacenDetallesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New InventarioMovimientoAlmacenDetallesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInventarioMovimientoAlmacenDetalles
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new InventarioMovimientoAlmacenDetallesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInventarioMovimientoAlmacenDetallesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.InventarioMovimientoAlmacenDetallesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New InventarioMovimientoAlmacenDetallesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "InventarioMovimientoAlmacenDetallesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty InvHistorialPvEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class InvHistorialPvEntityFactory 
#Else
	<Serializable()> _
	Public Class InvHistorialPvEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty InvHistorialPvEntity object.</summary>
		''' <returns>A new, empty InvHistorialPvEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New InvHistorialPvEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvHistorialPv
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new InvHistorialPvEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewInvHistorialPvUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.InvHistorialPvEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New InvHistorialPvCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "InvHistorialPvEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty LineaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class LineaEntityFactory 
#Else
	<Serializable()> _
	Public Class LineaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty LineaEntity object.</summary>
		''' <returns>A new, empty LineaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New LineaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewLinea
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new LineaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewLineaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.LineaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New LineaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "LineaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ListadePreciosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ListadePreciosEntityFactory 
#Else
	<Serializable()> _
	Public Class ListadePreciosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ListadePreciosEntity object.</summary>
		''' <returns>A new, empty ListadePreciosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ListadePreciosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewListadePrecios
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ListadePreciosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewListadePreciosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ListadePreciosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ListadePreciosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ListadePreciosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ListaPrecioEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ListaPrecioEntityFactory 
#Else
	<Serializable()> _
	Public Class ListaPrecioEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ListaPrecioEntity object.</summary>
		''' <returns>A new, empty ListaPrecioEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ListaPrecioEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewListaPrecio
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ListaPrecioEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewListaPrecioUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ListaPrecioEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ListaPrecioCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ListaPrecioEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ListaPrecioDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ListaPrecioDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class ListaPrecioDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ListaPrecioDetalleEntity object.</summary>
		''' <returns>A new, empty ListaPrecioDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ListaPrecioDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewListaPrecioDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ListaPrecioDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewListaPrecioDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ListaPrecioDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ListaPrecioDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ListaPrecioDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MarcaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MarcaEntityFactory 
#Else
	<Serializable()> _
	Public Class MarcaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MarcaEntity object.</summary>
		''' <returns>A new, empty MarcaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MarcaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMarca
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MarcaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMarcaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MarcaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MarcaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MarcaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McatCentroCostosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McatCentroCostosEntityFactory 
#Else
	<Serializable()> _
	Public Class McatCentroCostosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McatCentroCostosEntity object.</summary>
		''' <returns>A new, empty McatCentroCostosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McatCentroCostosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcatCentroCostos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McatCentroCostosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcatCentroCostosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McatCentroCostosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McatCentroCostosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McatCentroCostosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McattiposclienteEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McattiposclienteEntityFactory 
#Else
	<Serializable()> _
	Public Class McattiposclienteEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McattiposclienteEntity object.</summary>
		''' <returns>A new, empty McattiposclienteEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McattiposclienteEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcattiposcliente
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McattiposclienteEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcattiposclienteUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McattiposclienteEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McattiposclienteCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McattiposclienteEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McecatCorralesCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McecatCorralesCabEntityFactory 
#Else
	<Serializable()> _
	Public Class McecatCorralesCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McecatCorralesCabEntity object.</summary>
		''' <returns>A new, empty McecatCorralesCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McecatCorralesCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatCorralesCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McecatCorralesCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatCorralesCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McecatCorralesCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McecatCorralesCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McecatCorralesCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McecatCorralesDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McecatCorralesDetEntityFactory 
#Else
	<Serializable()> _
	Public Class McecatCorralesDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McecatCorralesDetEntity object.</summary>
		''' <returns>A new, empty McecatCorralesDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McecatCorralesDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatCorralesDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McecatCorralesDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatCorralesDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McecatCorralesDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McecatCorralesDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McecatCorralesDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McecatLotesCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McecatLotesCabEntityFactory 
#Else
	<Serializable()> _
	Public Class McecatLotesCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McecatLotesCabEntity object.</summary>
		''' <returns>A new, empty McecatLotesCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McecatLotesCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatLotesCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McecatLotesCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatLotesCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McecatLotesCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McecatLotesCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McecatLotesCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McecatLotesCabForEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McecatLotesCabForEntityFactory 
#Else
	<Serializable()> _
	Public Class McecatLotesCabForEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McecatLotesCabForEntity object.</summary>
		''' <returns>A new, empty McecatLotesCabForEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McecatLotesCabForEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatLotesCabFor
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McecatLotesCabForEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatLotesCabForUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McecatLotesCabForEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McecatLotesCabForCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McecatLotesCabForEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McecatLotesDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McecatLotesDetEntityFactory 
#Else
	<Serializable()> _
	Public Class McecatLotesDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McecatLotesDetEntity object.</summary>
		''' <returns>A new, empty McecatLotesDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McecatLotesDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatLotesDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McecatLotesDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatLotesDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McecatLotesDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McecatLotesDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McecatLotesDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McecatTiposCorralEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McecatTiposCorralEntityFactory 
#Else
	<Serializable()> _
	Public Class McecatTiposCorralEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McecatTiposCorralEntity object.</summary>
		''' <returns>A new, empty McecatTiposCorralEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McecatTiposCorralEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatTiposCorral
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McecatTiposCorralEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcecatTiposCorralUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McecatTiposCorralEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McecatTiposCorralCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McecatTiposCorralEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McgcatCausasMuerteEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McgcatCausasMuerteEntityFactory 
#Else
	<Serializable()> _
	Public Class McgcatCausasMuerteEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McgcatCausasMuerteEntity object.</summary>
		''' <returns>A new, empty McgcatCausasMuerteEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McgcatCausasMuerteEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatCausasMuerte
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McgcatCausasMuerteEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatCausasMuerteUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McgcatCausasMuerteEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McgcatCausasMuerteCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McgcatCausasMuerteEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McgcatChoferesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McgcatChoferesEntityFactory 
#Else
	<Serializable()> _
	Public Class McgcatChoferesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McgcatChoferesEntity object.</summary>
		''' <returns>A new, empty McgcatChoferesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McgcatChoferesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatChoferes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McgcatChoferesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatChoferesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McgcatChoferesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McgcatChoferesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McgcatChoferesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McgcatCompradoresdeGanadoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McgcatCompradoresdeGanadoEntityFactory 
#Else
	<Serializable()> _
	Public Class McgcatCompradoresdeGanadoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McgcatCompradoresdeGanadoEntity object.</summary>
		''' <returns>A new, empty McgcatCompradoresdeGanadoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McgcatCompradoresdeGanadoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatCompradoresdeGanado
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McgcatCompradoresdeGanadoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatCompradoresdeGanadoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McgcatCompradoresdeGanadoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McgcatCompradoresdeGanadoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McgcatCompradoresdeGanadoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McgcatConcepGastosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McgcatConcepGastosEntityFactory 
#Else
	<Serializable()> _
	Public Class McgcatConcepGastosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McgcatConcepGastosEntity object.</summary>
		''' <returns>A new, empty McgcatConcepGastosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McgcatConcepGastosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatConcepGastos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McgcatConcepGastosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatConcepGastosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McgcatConcepGastosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McgcatConcepGastosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McgcatConcepGastosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McgcatMovGanadoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McgcatMovGanadoEntityFactory 
#Else
	<Serializable()> _
	Public Class McgcatMovGanadoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McgcatMovGanadoEntity object.</summary>
		''' <returns>A new, empty McgcatMovGanadoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McgcatMovGanadoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatMovGanado
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McgcatMovGanadoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatMovGanadoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McgcatMovGanadoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McgcatMovGanadoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McgcatMovGanadoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McgcatTiposdeGanadoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McgcatTiposdeGanadoEntityFactory 
#Else
	<Serializable()> _
	Public Class McgcatTiposdeGanadoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McgcatTiposdeGanadoEntity object.</summary>
		''' <returns>A new, empty McgcatTiposdeGanadoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McgcatTiposdeGanadoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatTiposdeGanado
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McgcatTiposdeGanadoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatTiposdeGanadoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McgcatTiposdeGanadoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McgcatTiposdeGanadoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McgcatTiposdeGanadoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McgcatVehiculosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McgcatVehiculosEntityFactory 
#Else
	<Serializable()> _
	Public Class McgcatVehiculosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McgcatVehiculosEntity object.</summary>
		''' <returns>A new, empty McgcatVehiculosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McgcatVehiculosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatVehiculos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McgcatVehiculosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcatVehiculosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McgcatVehiculosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McgcatVehiculosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McgcatVehiculosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McgcompraGanadoCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McgcompraGanadoCabEntityFactory 
#Else
	<Serializable()> _
	Public Class McgcompraGanadoCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McgcompraGanadoCabEntity object.</summary>
		''' <returns>A new, empty McgcompraGanadoCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McgcompraGanadoCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcompraGanadoCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McgcompraGanadoCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcompraGanadoCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McgcompraGanadoCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McgcompraGanadoCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McgcompraGanadoCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McgcompraGanadoDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McgcompraGanadoDetEntityFactory 
#Else
	<Serializable()> _
	Public Class McgcompraGanadoDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McgcompraGanadoDetEntity object.</summary>
		''' <returns>A new, empty McgcompraGanadoDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McgcompraGanadoDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcompraGanadoDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McgcompraGanadoDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgcompraGanadoDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McgcompraGanadoDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McgcompraGanadoDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McgcompraGanadoDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McgconfiguracionMovimientoGanadoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McgconfiguracionMovimientoGanadoEntityFactory 
#Else
	<Serializable()> _
	Public Class McgconfiguracionMovimientoGanadoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McgconfiguracionMovimientoGanadoEntity object.</summary>
		''' <returns>A new, empty McgconfiguracionMovimientoGanadoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McgconfiguracionMovimientoGanadoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgconfiguracionMovimientoGanado
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McgconfiguracionMovimientoGanadoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcgconfiguracionMovimientoGanadoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McgconfiguracionMovimientoGanadoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McgconfiguracionMovimientoGanadoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McgconfiguracionMovimientoGanadoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McomCotizacionCompraEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McomCotizacionCompraEntityFactory 
#Else
	<Serializable()> _
	Public Class McomCotizacionCompraEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McomCotizacionCompraEntity object.</summary>
		''' <returns>A new, empty McomCotizacionCompraEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McomCotizacionCompraEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcomCotizacionCompra
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McomCotizacionCompraEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcomCotizacionCompraUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McomCotizacionCompraEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McomCotizacionCompraCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McomCotizacionCompraEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McomCotizacionCompraProveedorEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McomCotizacionCompraProveedorEntityFactory 
#Else
	<Serializable()> _
	Public Class McomCotizacionCompraProveedorEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McomCotizacionCompraProveedorEntity object.</summary>
		''' <returns>A new, empty McomCotizacionCompraProveedorEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McomCotizacionCompraProveedorEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcomCotizacionCompraProveedor
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McomCotizacionCompraProveedorEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcomCotizacionCompraProveedorUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McomCotizacionCompraProveedorEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McomCotizacionCompraProveedorCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McomCotizacionCompraProveedorEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McomCotizacionCompraProveedorDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McomCotizacionCompraProveedorDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class McomCotizacionCompraProveedorDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McomCotizacionCompraProveedorDetalleEntity object.</summary>
		''' <returns>A new, empty McomCotizacionCompraProveedorDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McomCotizacionCompraProveedorDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcomCotizacionCompraProveedorDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McomCotizacionCompraProveedorDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcomCotizacionCompraProveedorDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McomCotizacionCompraProveedorDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McomCotizacionCompraProveedorDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McomCotizacionCompraProveedorDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty McomRecepcionOrdenCompraDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class McomRecepcionOrdenCompraDetEntityFactory 
#Else
	<Serializable()> _
	Public Class McomRecepcionOrdenCompraDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty McomRecepcionOrdenCompraDetEntity object.</summary>
		''' <returns>A new, empty McomRecepcionOrdenCompraDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New McomRecepcionOrdenCompraDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcomRecepcionOrdenCompraDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new McomRecepcionOrdenCompraDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMcomRecepcionOrdenCompraDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.McomRecepcionOrdenCompraDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New McomRecepcionOrdenCompraDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "McomRecepcionOrdenCompraDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MetodoCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MetodoCabEntityFactory 
#Else
	<Serializable()> _
	Public Class MetodoCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MetodoCabEntity object.</summary>
		''' <returns>A new, empty MetodoCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MetodoCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMetodoCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MetodoCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMetodoCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MetodoCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MetodoCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MetodoCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MetodoDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MetodoDetEntityFactory 
#Else
	<Serializable()> _
	Public Class MetodoDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MetodoDetEntity object.</summary>
		''' <returns>A new, empty MetodoDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MetodoDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMetodoDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MetodoDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMetodoDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MetodoDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MetodoDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MetodoDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MetodoPagoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MetodoPagoEntityFactory 
#Else
	<Serializable()> _
	Public Class MetodoPagoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MetodoPagoEntity object.</summary>
		''' <returns>A new, empty MetodoPagoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MetodoPagoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMetodoPago
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MetodoPagoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMetodoPagoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MetodoPagoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MetodoPagoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MetodoPagoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MfacCatClientesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MfacCatClientesEntityFactory 
#Else
	<Serializable()> _
	Public Class MfacCatClientesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MfacCatClientesEntity object.</summary>
		''' <returns>A new, empty MfacCatClientesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MfacCatClientesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMfacCatClientes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MfacCatClientesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMfacCatClientesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MfacCatClientesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MfacCatClientesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MfacCatClientesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MfacClientesDatosFiscalesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MfacClientesDatosFiscalesEntityFactory 
#Else
	<Serializable()> _
	Public Class MfacClientesDatosFiscalesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MfacClientesDatosFiscalesEntity object.</summary>
		''' <returns>A new, empty MfacClientesDatosFiscalesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MfacClientesDatosFiscalesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMfacClientesDatosFiscales
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MfacClientesDatosFiscalesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMfacClientesDatosFiscalesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MfacClientesDatosFiscalesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MfacClientesDatosFiscalesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MfacClientesDatosFiscalesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MfacEmbarquesCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MfacEmbarquesCabEntityFactory 
#Else
	<Serializable()> _
	Public Class MfacEmbarquesCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MfacEmbarquesCabEntity object.</summary>
		''' <returns>A new, empty MfacEmbarquesCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MfacEmbarquesCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMfacEmbarquesCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MfacEmbarquesCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMfacEmbarquesCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MfacEmbarquesCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MfacEmbarquesCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MfacEmbarquesCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MfacEmbarquesDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MfacEmbarquesDetEntityFactory 
#Else
	<Serializable()> _
	Public Class MfacEmbarquesDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MfacEmbarquesDetEntity object.</summary>
		''' <returns>A new, empty MfacEmbarquesDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MfacEmbarquesDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMfacEmbarquesDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MfacEmbarquesDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMfacEmbarquesDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MfacEmbarquesDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MfacEmbarquesDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MfacEmbarquesDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MgcnfFoliadorAlmacenEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MgcnfFoliadorAlmacenEntityFactory 
#Else
	<Serializable()> _
	Public Class MgcnfFoliadorAlmacenEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MgcnfFoliadorAlmacenEntity object.</summary>
		''' <returns>A new, empty MgcnfFoliadorAlmacenEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MgcnfFoliadorAlmacenEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMgcnfFoliadorAlmacen
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MgcnfFoliadorAlmacenEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMgcnfFoliadorAlmacenUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MgcnfFoliadorAlmacenEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MgcnfFoliadorAlmacenCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MgcnfFoliadorAlmacenEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MgcnfFoliadoresEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MgcnfFoliadoresEntityFactory 
#Else
	<Serializable()> _
	Public Class MgcnfFoliadoresEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MgcnfFoliadoresEntity object.</summary>
		''' <returns>A new, empty MgcnfFoliadoresEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MgcnfFoliadoresEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMgcnfFoliadores
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MgcnfFoliadoresEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMgcnfFoliadoresUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MgcnfFoliadoresEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MgcnfFoliadoresCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MgcnfFoliadoresEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MgcnfFoliosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MgcnfFoliosEntityFactory 
#Else
	<Serializable()> _
	Public Class MgcnfFoliosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MgcnfFoliosEntity object.</summary>
		''' <returns>A new, empty MgcnfFoliosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MgcnfFoliosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMgcnfFolios
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MgcnfFoliosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMgcnfFoliosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MgcnfFoliosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MgcnfFoliosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MgcnfFoliosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MgralcatPuntosEntregaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MgralcatPuntosEntregaEntityFactory 
#Else
	<Serializable()> _
	Public Class MgralcatPuntosEntregaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MgralcatPuntosEntregaEntity object.</summary>
		''' <returns>A new, empty MgralcatPuntosEntregaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MgralcatPuntosEntregaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMgralcatPuntosEntrega
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MgralcatPuntosEntregaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMgralcatPuntosEntregaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MgralcatPuntosEntregaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MgralcatPuntosEntregaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MgralcatPuntosEntregaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MinvMovimientosAlmacenPvEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MinvMovimientosAlmacenPvEntityFactory 
#Else
	<Serializable()> _
	Public Class MinvMovimientosAlmacenPvEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MinvMovimientosAlmacenPvEntity object.</summary>
		''' <returns>A new, empty MinvMovimientosAlmacenPvEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MinvMovimientosAlmacenPvEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvMovimientosAlmacenPv
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MinvMovimientosAlmacenPvEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvMovimientosAlmacenPvUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MinvMovimientosAlmacenPvEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MinvMovimientosAlmacenPvCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MinvMovimientosAlmacenPvEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MinvMovimientosAlmacenPvdetallesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MinvMovimientosAlmacenPvdetallesEntityFactory 
#Else
	<Serializable()> _
	Public Class MinvMovimientosAlmacenPvdetallesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MinvMovimientosAlmacenPvdetallesEntity object.</summary>
		''' <returns>A new, empty MinvMovimientosAlmacenPvdetallesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MinvMovimientosAlmacenPvdetallesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvMovimientosAlmacenPvdetalles
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MinvMovimientosAlmacenPvdetallesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvMovimientosAlmacenPvdetallesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MinvMovimientosAlmacenPvdetallesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MinvMovimientosAlmacenPvdetallesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MinvMovimientosAlmacenPvdetallesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MinvTransferenciaAlmacenEntradaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MinvTransferenciaAlmacenEntradaEntityFactory 
#Else
	<Serializable()> _
	Public Class MinvTransferenciaAlmacenEntradaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MinvTransferenciaAlmacenEntradaEntity object.</summary>
		''' <returns>A new, empty MinvTransferenciaAlmacenEntradaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MinvTransferenciaAlmacenEntradaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenEntrada
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MinvTransferenciaAlmacenEntradaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenEntradaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MinvTransferenciaAlmacenEntradaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MinvTransferenciaAlmacenEntradaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MinvTransferenciaAlmacenEntradaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MinvTransferenciaAlmacenEntradaDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MinvTransferenciaAlmacenEntradaDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class MinvTransferenciaAlmacenEntradaDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MinvTransferenciaAlmacenEntradaDetalleEntity object.</summary>
		''' <returns>A new, empty MinvTransferenciaAlmacenEntradaDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MinvTransferenciaAlmacenEntradaDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenEntradaDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MinvTransferenciaAlmacenEntradaDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenEntradaDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MinvTransferenciaAlmacenEntradaDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MinvTransferenciaAlmacenEntradaDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MinvTransferenciaAlmacenEntradaDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MinvTransferenciaAlmacenProdEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MinvTransferenciaAlmacenProdEntityFactory 
#Else
	<Serializable()> _
	Public Class MinvTransferenciaAlmacenProdEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MinvTransferenciaAlmacenProdEntity object.</summary>
		''' <returns>A new, empty MinvTransferenciaAlmacenProdEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MinvTransferenciaAlmacenProdEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenProd
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MinvTransferenciaAlmacenProdEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenProdUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MinvTransferenciaAlmacenProdEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MinvTransferenciaAlmacenProdCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MinvTransferenciaAlmacenProdEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MinvTransferenciaAlmacenProdDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MinvTransferenciaAlmacenProdDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class MinvTransferenciaAlmacenProdDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MinvTransferenciaAlmacenProdDetalleEntity object.</summary>
		''' <returns>A new, empty MinvTransferenciaAlmacenProdDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MinvTransferenciaAlmacenProdDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenProdDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MinvTransferenciaAlmacenProdDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenProdDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MinvTransferenciaAlmacenProdDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MinvTransferenciaAlmacenProdDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MinvTransferenciaAlmacenProdDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MinvTransferenciaAlmacenSalidaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MinvTransferenciaAlmacenSalidaEntityFactory 
#Else
	<Serializable()> _
	Public Class MinvTransferenciaAlmacenSalidaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MinvTransferenciaAlmacenSalidaEntity object.</summary>
		''' <returns>A new, empty MinvTransferenciaAlmacenSalidaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MinvTransferenciaAlmacenSalidaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenSalida
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MinvTransferenciaAlmacenSalidaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenSalidaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MinvTransferenciaAlmacenSalidaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MinvTransferenciaAlmacenSalidaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MinvTransferenciaAlmacenSalidaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MinvTransferenciaAlmacenSalidaDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MinvTransferenciaAlmacenSalidaDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class MinvTransferenciaAlmacenSalidaDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MinvTransferenciaAlmacenSalidaDetalleEntity object.</summary>
		''' <returns>A new, empty MinvTransferenciaAlmacenSalidaDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MinvTransferenciaAlmacenSalidaDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenSalidaDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MinvTransferenciaAlmacenSalidaDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMinvTransferenciaAlmacenSalidaDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MinvTransferenciaAlmacenSalidaDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MinvTransferenciaAlmacenSalidaDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MinvTransferenciaAlmacenSalidaDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ModuloEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ModuloEntityFactory 
#Else
	<Serializable()> _
	Public Class ModuloEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ModuloEntity object.</summary>
		''' <returns>A new, empty ModuloEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ModuloEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewModulo
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ModuloEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewModuloUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ModuloEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ModuloCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ModuloEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MonedaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MonedaEntityFactory 
#Else
	<Serializable()> _
	Public Class MonedaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MonedaEntity object.</summary>
		''' <returns>A new, empty MonedaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MonedaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMoneda
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MonedaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMonedaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MonedaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MonedaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MonedaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MotivoBajaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MotivoBajaEntityFactory 
#Else
	<Serializable()> _
	Public Class MotivoBajaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MotivoBajaEntity object.</summary>
		''' <returns>A new, empty MotivoBajaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MotivoBajaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMotivoBaja
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MotivoBajaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMotivoBajaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MotivoBajaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MotivoBajaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MotivoBajaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MotivoBajaDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MotivoBajaDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class MotivoBajaDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MotivoBajaDetalleEntity object.</summary>
		''' <returns>A new, empty MotivoBajaDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MotivoBajaDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMotivoBajaDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MotivoBajaDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMotivoBajaDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MotivoBajaDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MotivoBajaDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MotivoBajaDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MotivoCancelacionEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MotivoCancelacionEntityFactory 
#Else
	<Serializable()> _
	Public Class MotivoCancelacionEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MotivoCancelacionEntity object.</summary>
		''' <returns>A new, empty MotivoCancelacionEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MotivoCancelacionEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMotivoCancelacion
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MotivoCancelacionEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMotivoCancelacionUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MotivoCancelacionEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MotivoCancelacionCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MotivoCancelacionEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MotivoCancelacionDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MotivoCancelacionDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class MotivoCancelacionDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MotivoCancelacionDetalleEntity object.</summary>
		''' <returns>A new, empty MotivoCancelacionDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MotivoCancelacionDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMotivoCancelacionDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MotivoCancelacionDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMotivoCancelacionDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MotivoCancelacionDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MotivoCancelacionDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MotivoCancelacionDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MsccatDecomisosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MsccatDecomisosEntityFactory 
#Else
	<Serializable()> _
	Public Class MsccatDecomisosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MsccatDecomisosEntity object.</summary>
		''' <returns>A new, empty MsccatDecomisosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MsccatDecomisosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatDecomisos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MsccatDecomisosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatDecomisosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MsccatDecomisosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MsccatDecomisosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MsccatDecomisosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MsccatMotivoDevolucionEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MsccatMotivoDevolucionEntityFactory 
#Else
	<Serializable()> _
	Public Class MsccatMotivoDevolucionEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MsccatMotivoDevolucionEntity object.</summary>
		''' <returns>A new, empty MsccatMotivoDevolucionEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MsccatMotivoDevolucionEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatMotivoDevolucion
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MsccatMotivoDevolucionEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatMotivoDevolucionUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MsccatMotivoDevolucionEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MsccatMotivoDevolucionCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MsccatMotivoDevolucionEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MsccatMovtosAlmacenEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MsccatMovtosAlmacenEntityFactory 
#Else
	<Serializable()> _
	Public Class MsccatMovtosAlmacenEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MsccatMovtosAlmacenEntity object.</summary>
		''' <returns>A new, empty MsccatMovtosAlmacenEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MsccatMovtosAlmacenEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatMovtosAlmacen
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MsccatMovtosAlmacenEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatMovtosAlmacenUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MsccatMovtosAlmacenEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MsccatMovtosAlmacenCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MsccatMovtosAlmacenEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MsccatProductosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MsccatProductosEntityFactory 
#Else
	<Serializable()> _
	Public Class MsccatProductosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MsccatProductosEntity object.</summary>
		''' <returns>A new, empty MsccatProductosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MsccatProductosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatProductos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MsccatProductosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatProductosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MsccatProductosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MsccatProductosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MsccatProductosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MsccatProductosDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MsccatProductosDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class MsccatProductosDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MsccatProductosDetalleEntity object.</summary>
		''' <returns>A new, empty MsccatProductosDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MsccatProductosDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatProductosDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MsccatProductosDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatProductosDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MsccatProductosDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MsccatProductosDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MsccatProductosDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MsccatServiciosRastroEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MsccatServiciosRastroEntityFactory 
#Else
	<Serializable()> _
	Public Class MsccatServiciosRastroEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MsccatServiciosRastroEntity object.</summary>
		''' <returns>A new, empty MsccatServiciosRastroEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MsccatServiciosRastroEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatServiciosRastro
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MsccatServiciosRastroEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatServiciosRastroUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MsccatServiciosRastroEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MsccatServiciosRastroCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MsccatServiciosRastroEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MsccatTiposAlmacenEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MsccatTiposAlmacenEntityFactory 
#Else
	<Serializable()> _
	Public Class MsccatTiposAlmacenEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MsccatTiposAlmacenEntity object.</summary>
		''' <returns>A new, empty MsccatTiposAlmacenEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MsccatTiposAlmacenEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatTiposAlmacen
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MsccatTiposAlmacenEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccatTiposAlmacenUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MsccatTiposAlmacenEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MsccatTiposAlmacenCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MsccatTiposAlmacenEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MsccomprasCanalesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MsccomprasCanalesEntityFactory 
#Else
	<Serializable()> _
	Public Class MsccomprasCanalesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MsccomprasCanalesEntity object.</summary>
		''' <returns>A new, empty MsccomprasCanalesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MsccomprasCanalesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccomprasCanales
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MsccomprasCanalesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccomprasCanalesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MsccomprasCanalesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MsccomprasCanalesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MsccomprasCanalesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscconfigMovtosAlmacenEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscconfigMovtosAlmacenEntityFactory 
#Else
	<Serializable()> _
	Public Class MscconfigMovtosAlmacenEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscconfigMovtosAlmacenEntity object.</summary>
		''' <returns>A new, empty MscconfigMovtosAlmacenEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscconfigMovtosAlmacenEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscconfigMovtosAlmacen
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscconfigMovtosAlmacenEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscconfigMovtosAlmacenUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscconfigMovtosAlmacenEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscconfigMovtosAlmacenCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscconfigMovtosAlmacenEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MsccortesPreCortesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MsccortesPreCortesEntityFactory 
#Else
	<Serializable()> _
	Public Class MsccortesPreCortesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MsccortesPreCortesEntity object.</summary>
		''' <returns>A new, empty MsccortesPreCortesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MsccortesPreCortesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccortesPreCortes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MsccortesPreCortesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMsccortesPreCortesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MsccortesPreCortesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MsccortesPreCortesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MsccortesPreCortesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscdetCanalAcorteEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscdetCanalAcorteEntityFactory 
#Else
	<Serializable()> _
	Public Class MscdetCanalAcorteEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscdetCanalAcorteEntity object.</summary>
		''' <returns>A new, empty MscdetCanalAcorteEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscdetCanalAcorteEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscdetCanalAcorte
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscdetCanalAcorteEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscdetCanalAcorteUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscdetCanalAcorteEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscdetCanalAcorteCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscdetCanalAcorteEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscdetCanalComprasEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscdetCanalComprasEntityFactory 
#Else
	<Serializable()> _
	Public Class MscdetCanalComprasEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscdetCanalComprasEntity object.</summary>
		''' <returns>A new, empty MscdetCanalComprasEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscdetCanalComprasEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscdetCanalCompras
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscdetCanalComprasEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscdetCanalComprasUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscdetCanalComprasEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscdetCanalComprasCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscdetCanalComprasEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscinventarioFisicoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscinventarioFisicoEntityFactory 
#Else
	<Serializable()> _
	Public Class MscinventarioFisicoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscinventarioFisicoEntity object.</summary>
		''' <returns>A new, empty MscinventarioFisicoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscinventarioFisicoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscinventarioFisico
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscinventarioFisicoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscinventarioFisicoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscinventarioFisicoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscinventarioFisicoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscinventarioFisicoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscinventarioProductoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscinventarioProductoEntityFactory 
#Else
	<Serializable()> _
	Public Class MscinventarioProductoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscinventarioProductoEntity object.</summary>
		''' <returns>A new, empty MscinventarioProductoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscinventarioProductoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscinventarioProducto
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscinventarioProductoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscinventarioProductoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscinventarioProductoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscinventarioProductoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscinventarioProductoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscloteCortesCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscloteCortesCabEntityFactory 
#Else
	<Serializable()> _
	Public Class MscloteCortesCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscloteCortesCabEntity object.</summary>
		''' <returns>A new, empty MscloteCortesCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscloteCortesCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscloteCortesCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscloteCortesCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscloteCortesCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscloteCortesCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscloteCortesCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscloteCortesCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscloteCortesDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscloteCortesDetEntityFactory 
#Else
	<Serializable()> _
	Public Class MscloteCortesDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscloteCortesDetEntity object.</summary>
		''' <returns>A new, empty MscloteCortesDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscloteCortesDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscloteCortesDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscloteCortesDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscloteCortesDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscloteCortesDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscloteCortesDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscloteCortesDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscloteCortesDetComparacionEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscloteCortesDetComparacionEntityFactory 
#Else
	<Serializable()> _
	Public Class MscloteCortesDetComparacionEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscloteCortesDetComparacionEntity object.</summary>
		''' <returns>A new, empty MscloteCortesDetComparacionEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscloteCortesDetComparacionEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscloteCortesDetComparacion
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscloteCortesDetComparacionEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscloteCortesDetComparacionUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscloteCortesDetComparacionEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscloteCortesDetComparacionCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscloteCortesDetComparacionEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscmovtosAlmacenCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscmovtosAlmacenCabEntityFactory 
#Else
	<Serializable()> _
	Public Class MscmovtosAlmacenCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscmovtosAlmacenCabEntity object.</summary>
		''' <returns>A new, empty MscmovtosAlmacenCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscmovtosAlmacenCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscmovtosAlmacenCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscmovtosAlmacenCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscmovtosAlmacenCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscmovtosAlmacenCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscmovtosAlmacenCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscmovtosAlmacenCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscmovtosAlmacenDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscmovtosAlmacenDetEntityFactory 
#Else
	<Serializable()> _
	Public Class MscmovtosAlmacenDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscmovtosAlmacenDetEntity object.</summary>
		''' <returns>A new, empty MscmovtosAlmacenDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscmovtosAlmacenDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscmovtosAlmacenDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscmovtosAlmacenDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscmovtosAlmacenDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscmovtosAlmacenDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscmovtosAlmacenDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscmovtosAlmacenDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscproductosDecomisosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscproductosDecomisosEntityFactory 
#Else
	<Serializable()> _
	Public Class MscproductosDecomisosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscproductosDecomisosEntity object.</summary>
		''' <returns>A new, empty MscproductosDecomisosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscproductosDecomisosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscproductosDecomisos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscproductosDecomisosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscproductosDecomisosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscproductosDecomisosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscproductosDecomisosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscproductosDecomisosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscproductosValorAgregadoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscproductosValorAgregadoEntityFactory 
#Else
	<Serializable()> _
	Public Class MscproductosValorAgregadoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscproductosValorAgregadoEntity object.</summary>
		''' <returns>A new, empty MscproductosValorAgregadoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscproductosValorAgregadoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscproductosValorAgregado
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscproductosValorAgregadoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscproductosValorAgregadoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscproductosValorAgregadoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscproductosValorAgregadoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscproductosValorAgregadoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscrecepcionCanalesCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscrecepcionCanalesCabEntityFactory 
#Else
	<Serializable()> _
	Public Class MscrecepcionCanalesCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscrecepcionCanalesCabEntity object.</summary>
		''' <returns>A new, empty MscrecepcionCanalesCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscrecepcionCanalesCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscrecepcionCanalesCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscrecepcionCanalesCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscrecepcionCanalesCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscrecepcionCanalesCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscrecepcionCanalesCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscrecepcionCanalesCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscrecepcionCanalesDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscrecepcionCanalesDetEntityFactory 
#Else
	<Serializable()> _
	Public Class MscrecepcionCanalesDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscrecepcionCanalesDetEntity object.</summary>
		''' <returns>A new, empty MscrecepcionCanalesDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscrecepcionCanalesDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscrecepcionCanalesDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscrecepcionCanalesDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscrecepcionCanalesDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscrecepcionCanalesDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscrecepcionCanalesDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscrecepcionCanalesDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscregistroSacrificioCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscregistroSacrificioCabEntityFactory 
#Else
	<Serializable()> _
	Public Class MscregistroSacrificioCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscregistroSacrificioCabEntity object.</summary>
		''' <returns>A new, empty MscregistroSacrificioCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscregistroSacrificioCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscregistroSacrificioCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscregistroSacrificioCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscregistroSacrificioCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscregistroSacrificioCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscregistroSacrificioCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscregistroSacrificioCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscrelacionCortesClientesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscrelacionCortesClientesEntityFactory 
#Else
	<Serializable()> _
	Public Class MscrelacionCortesClientesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscrelacionCortesClientesEntity object.</summary>
		''' <returns>A new, empty MscrelacionCortesClientesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscrelacionCortesClientesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscrelacionCortesClientes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscrelacionCortesClientesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscrelacionCortesClientesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscrelacionCortesClientesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscrelacionCortesClientesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscrelacionCortesClientesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscrelacionProductosRastrosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscrelacionProductosRastrosEntityFactory 
#Else
	<Serializable()> _
	Public Class MscrelacionProductosRastrosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscrelacionProductosRastrosEntity object.</summary>
		''' <returns>A new, empty MscrelacionProductosRastrosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscrelacionProductosRastrosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscrelacionProductosRastros
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscrelacionProductosRastrosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscrelacionProductosRastrosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscrelacionProductosRastrosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscrelacionProductosRastrosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscrelacionProductosRastrosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscsalidasGanadoCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscsalidasGanadoCabEntityFactory 
#Else
	<Serializable()> _
	Public Class MscsalidasGanadoCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscsalidasGanadoCabEntity object.</summary>
		''' <returns>A new, empty MscsalidasGanadoCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscsalidasGanadoCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscsalidasGanadoCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscsalidasGanadoCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscsalidasGanadoCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscsalidasGanadoCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscsalidasGanadoCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscsalidasGanadoCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MscsalidasGanadoDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MscsalidasGanadoDetEntityFactory 
#Else
	<Serializable()> _
	Public Class MscsalidasGanadoDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MscsalidasGanadoDetEntity object.</summary>
		''' <returns>A new, empty MscsalidasGanadoDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MscsalidasGanadoDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscsalidasGanadoDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MscsalidasGanadoDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMscsalidasGanadoDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MscsalidasGanadoDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MscsalidasGanadoDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MscsalidasGanadoDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MveCtaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MveCtaEntityFactory 
#Else
	<Serializable()> _
	Public Class MveCtaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MveCtaEntity object.</summary>
		''' <returns>A new, empty MveCtaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MveCtaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMveCta
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MveCtaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMveCtaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MveCtaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MveCtaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MveCtaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty MvtosBancariosCbEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class MvtosBancariosCbEntityFactory 
#Else
	<Serializable()> _
	Public Class MvtosBancariosCbEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty MvtosBancariosCbEntity object.</summary>
		''' <returns>A new, empty MvtosBancariosCbEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New MvtosBancariosCbEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMvtosBancariosCb
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new MvtosBancariosCbEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewMvtosBancariosCbUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.MvtosBancariosCbEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New MvtosBancariosCbCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "MvtosBancariosCbEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NomCatEmpleadosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NomCatEmpleadosEntityFactory 
#Else
	<Serializable()> _
	Public Class NomCatEmpleadosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NomCatEmpleadosEntity object.</summary>
		''' <returns>A new, empty NomCatEmpleadosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NomCatEmpleadosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomCatEmpleados
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NomCatEmpleadosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomCatEmpleadosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NomCatEmpleadosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NomCatEmpleadosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NomCatEmpleadosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NomCatPuestosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NomCatPuestosEntityFactory 
#Else
	<Serializable()> _
	Public Class NomCatPuestosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NomCatPuestosEntity object.</summary>
		''' <returns>A new, empty NomCatPuestosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NomCatPuestosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomCatPuestos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NomCatPuestosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomCatPuestosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NomCatPuestosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NomCatPuestosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NomCatPuestosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NomConfiguracionEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NomConfiguracionEntityFactory 
#Else
	<Serializable()> _
	Public Class NomConfiguracionEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NomConfiguracionEntity object.</summary>
		''' <returns>A new, empty NomConfiguracionEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NomConfiguracionEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomConfiguracion
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NomConfiguracionEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomConfiguracionUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NomConfiguracionEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NomConfiguracionCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NomConfiguracionEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NomDiasVacacionesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NomDiasVacacionesEntityFactory 
#Else
	<Serializable()> _
	Public Class NomDiasVacacionesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NomDiasVacacionesEntity object.</summary>
		''' <returns>A new, empty NomDiasVacacionesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NomDiasVacacionesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomDiasVacaciones
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NomDiasVacacionesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomDiasVacacionesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NomDiasVacacionesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NomDiasVacacionesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NomDiasVacacionesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NomImportesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NomImportesEntityFactory 
#Else
	<Serializable()> _
	Public Class NomImportesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NomImportesEntity object.</summary>
		''' <returns>A new, empty NomImportesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NomImportesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomImportes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NomImportesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomImportesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NomImportesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NomImportesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NomImportesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NomImssinfonavitEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NomImssinfonavitEntityFactory 
#Else
	<Serializable()> _
	Public Class NomImssinfonavitEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NomImssinfonavitEntity object.</summary>
		''' <returns>A new, empty NomImssinfonavitEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NomImssinfonavitEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomImssinfonavit
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NomImssinfonavitEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomImssinfonavitUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NomImssinfonavitEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NomImssinfonavitCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NomImssinfonavitEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NomIsrEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NomIsrEntityFactory 
#Else
	<Serializable()> _
	Public Class NomIsrEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NomIsrEntity object.</summary>
		''' <returns>A new, empty NomIsrEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NomIsrEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomIsr
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NomIsrEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomIsrUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NomIsrEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NomIsrCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NomIsrEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NomSubsidioEmpleoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NomSubsidioEmpleoEntityFactory 
#Else
	<Serializable()> _
	Public Class NomSubsidioEmpleoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NomSubsidioEmpleoEntity object.</summary>
		''' <returns>A new, empty NomSubsidioEmpleoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NomSubsidioEmpleoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomSubsidioEmpleo
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NomSubsidioEmpleoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNomSubsidioEmpleoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NomSubsidioEmpleoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NomSubsidioEmpleoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NomSubsidioEmpleoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NotaCreditoCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NotaCreditoCabEntityFactory 
#Else
	<Serializable()> _
	Public Class NotaCreditoCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NotaCreditoCabEntity object.</summary>
		''' <returns>A new, empty NotaCreditoCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NotaCreditoCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaCreditoCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NotaCreditoCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaCreditoCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NotaCreditoCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NotaCreditoCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NotaCreditoCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NotaCreditoDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NotaCreditoDetEntityFactory 
#Else
	<Serializable()> _
	Public Class NotaCreditoDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NotaCreditoDetEntity object.</summary>
		''' <returns>A new, empty NotaCreditoDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NotaCreditoDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaCreditoDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NotaCreditoDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaCreditoDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NotaCreditoDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NotaCreditoDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NotaCreditoDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NotaVentaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NotaVentaEntityFactory 
#Else
	<Serializable()> _
	Public Class NotaVentaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NotaVentaEntity object.</summary>
		''' <returns>A new, empty NotaVentaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NotaVentaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaVenta
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NotaVentaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaVentaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NotaVentaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NotaVentaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NotaVentaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NotaVentaDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NotaVentaDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class NotaVentaDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NotaVentaDetalleEntity object.</summary>
		''' <returns>A new, empty NotaVentaDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NotaVentaDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaVentaDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NotaVentaDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaVentaDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NotaVentaDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NotaVentaDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NotaVentaDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NotaVentaDetalleRespEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NotaVentaDetalleRespEntityFactory 
#Else
	<Serializable()> _
	Public Class NotaVentaDetalleRespEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NotaVentaDetalleRespEntity object.</summary>
		''' <returns>A new, empty NotaVentaDetalleRespEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NotaVentaDetalleRespEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaVentaDetalleResp
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NotaVentaDetalleRespEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaVentaDetalleRespUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NotaVentaDetalleRespEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NotaVentaDetalleRespCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NotaVentaDetalleRespEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty NotaVentaRespEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class NotaVentaRespEntityFactory 
#Else
	<Serializable()> _
	Public Class NotaVentaRespEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty NotaVentaRespEntity object.</summary>
		''' <returns>A new, empty NotaVentaRespEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New NotaVentaRespEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaVentaResp
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new NotaVentaRespEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewNotaVentaRespUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.NotaVentaRespEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New NotaVentaRespCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "NotaVentaRespEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty OrdenCompraEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class OrdenCompraEntityFactory 
#Else
	<Serializable()> _
	Public Class OrdenCompraEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty OrdenCompraEntity object.</summary>
		''' <returns>A new, empty OrdenCompraEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New OrdenCompraEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewOrdenCompra
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new OrdenCompraEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewOrdenCompraUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.OrdenCompraEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New OrdenCompraCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "OrdenCompraEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty OrdenCompraDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class OrdenCompraDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class OrdenCompraDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty OrdenCompraDetalleEntity object.</summary>
		''' <returns>A new, empty OrdenCompraDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New OrdenCompraDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewOrdenCompraDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new OrdenCompraDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewOrdenCompraDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.OrdenCompraDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New OrdenCompraDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "OrdenCompraDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty OrdenServicioEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class OrdenServicioEntityFactory 
#Else
	<Serializable()> _
	Public Class OrdenServicioEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty OrdenServicioEntity object.</summary>
		''' <returns>A new, empty OrdenServicioEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New OrdenServicioEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewOrdenServicio
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new OrdenServicioEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewOrdenServicioUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.OrdenServicioEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New OrdenServicioCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "OrdenServicioEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty OrdenServicioDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class OrdenServicioDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class OrdenServicioDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty OrdenServicioDetalleEntity object.</summary>
		''' <returns>A new, empty OrdenServicioDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New OrdenServicioDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewOrdenServicioDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new OrdenServicioDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewOrdenServicioDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.OrdenServicioDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New OrdenServicioDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "OrdenServicioDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PagoCheDevueltoCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PagoCheDevueltoCabEntityFactory 
#Else
	<Serializable()> _
	Public Class PagoCheDevueltoCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PagoCheDevueltoCabEntity object.</summary>
		''' <returns>A new, empty PagoCheDevueltoCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PagoCheDevueltoCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPagoCheDevueltoCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PagoCheDevueltoCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPagoCheDevueltoCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PagoCheDevueltoCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PagoCheDevueltoCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PagoCheDevueltoCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PagoCheDevueltoDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PagoCheDevueltoDetEntityFactory 
#Else
	<Serializable()> _
	Public Class PagoCheDevueltoDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PagoCheDevueltoDetEntity object.</summary>
		''' <returns>A new, empty PagoCheDevueltoDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PagoCheDevueltoDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPagoCheDevueltoDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PagoCheDevueltoDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPagoCheDevueltoDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PagoCheDevueltoDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PagoCheDevueltoDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PagoCheDevueltoDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PagoDeCtesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PagoDeCtesEntityFactory 
#Else
	<Serializable()> _
	Public Class PagoDeCtesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PagoDeCtesEntity object.</summary>
		''' <returns>A new, empty PagoDeCtesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PagoDeCtesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPagoDeCtes
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PagoDeCtesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPagoDeCtesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PagoDeCtesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PagoDeCtesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PagoDeCtesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PeriodosContEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PeriodosContEntityFactory 
#Else
	<Serializable()> _
	Public Class PeriodosContEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PeriodosContEntity object.</summary>
		''' <returns>A new, empty PeriodosContEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PeriodosContEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPeriodosCont
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PeriodosContEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPeriodosContUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PeriodosContEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PeriodosContCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PeriodosContEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PlazaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PlazaEntityFactory 
#Else
	<Serializable()> _
	Public Class PlazaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PlazaEntity object.</summary>
		''' <returns>A new, empty PlazaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PlazaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPlaza
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PlazaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPlazaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PlazaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PlazaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PlazaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PoblacionEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PoblacionEntityFactory 
#Else
	<Serializable()> _
	Public Class PoblacionEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PoblacionEntity object.</summary>
		''' <returns>A new, empty PoblacionEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PoblacionEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPoblacion
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PoblacionEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPoblacionUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PoblacionEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PoblacionCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PoblacionEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PogrCbEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PogrCbEntityFactory 
#Else
	<Serializable()> _
	Public Class PogrCbEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PogrCbEntity object.</summary>
		''' <returns>A new, empty PogrCbEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PogrCbEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPogrCb
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PogrCbEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPogrCbUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PogrCbEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PogrCbCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PogrCbEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PoGrDtEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PoGrDtEntityFactory 
#Else
	<Serializable()> _
	Public Class PoGrDtEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PoGrDtEntity object.</summary>
		''' <returns>A new, empty PoGrDtEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PoGrDtEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPoGrDt
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PoGrDtEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPoGrDtUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PoGrDtEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PoGrDtCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PoGrDtEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PolizaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PolizaEntityFactory 
#Else
	<Serializable()> _
	Public Class PolizaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PolizaEntity object.</summary>
		''' <returns>A new, empty PolizaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PolizaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPoliza
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PolizaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPolizaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PolizaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PolizaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PolizaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PolizaDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PolizaDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class PolizaDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PolizaDetalleEntity object.</summary>
		''' <returns>A new, empty PolizaDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PolizaDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPolizaDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PolizaDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPolizaDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PolizaDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PolizaDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PolizaDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PolizasModeloCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PolizasModeloCabEntityFactory 
#Else
	<Serializable()> _
	Public Class PolizasModeloCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PolizasModeloCabEntity object.</summary>
		''' <returns>A new, empty PolizasModeloCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PolizasModeloCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPolizasModeloCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PolizasModeloCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPolizasModeloCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PolizasModeloCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PolizasModeloCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PolizasModeloCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PolizasModeloDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PolizasModeloDetEntityFactory 
#Else
	<Serializable()> _
	Public Class PolizasModeloDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PolizasModeloDetEntity object.</summary>
		''' <returns>A new, empty PolizasModeloDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PolizasModeloDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPolizasModeloDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PolizasModeloDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPolizasModeloDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PolizasModeloDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PolizasModeloDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PolizasModeloDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PresentacionEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PresentacionEntityFactory 
#Else
	<Serializable()> _
	Public Class PresentacionEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PresentacionEntity object.</summary>
		''' <returns>A new, empty PresentacionEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PresentacionEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPresentacion
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PresentacionEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPresentacionUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PresentacionEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PresentacionCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PresentacionEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PresupuestoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PresupuestoEntityFactory 
#Else
	<Serializable()> _
	Public Class PresupuestoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PresupuestoEntity object.</summary>
		''' <returns>A new, empty PresupuestoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PresupuestoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPresupuesto
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PresupuestoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPresupuestoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PresupuestoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PresupuestoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PresupuestoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PresupuestoCompraDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PresupuestoCompraDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class PresupuestoCompraDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PresupuestoCompraDetalleEntity object.</summary>
		''' <returns>A new, empty PresupuestoCompraDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PresupuestoCompraDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPresupuestoCompraDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PresupuestoCompraDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPresupuestoCompraDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PresupuestoCompraDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PresupuestoCompraDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PresupuestoCompraDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ProductoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ProductoEntityFactory 
#Else
	<Serializable()> _
	Public Class ProductoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ProductoEntity object.</summary>
		''' <returns>A new, empty ProductoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ProductoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProducto
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ProductoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProductoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ProductoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ProductoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ProductoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ProductoCostoIndirectoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ProductoCostoIndirectoEntityFactory 
#Else
	<Serializable()> _
	Public Class ProductoCostoIndirectoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ProductoCostoIndirectoEntity object.</summary>
		''' <returns>A new, empty ProductoCostoIndirectoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ProductoCostoIndirectoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProductoCostoIndirecto
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ProductoCostoIndirectoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProductoCostoIndirectoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ProductoCostoIndirectoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ProductoCostoIndirectoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ProductoCostoIndirectoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ProductoDerivadoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ProductoDerivadoEntityFactory 
#Else
	<Serializable()> _
	Public Class ProductoDerivadoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ProductoDerivadoEntity object.</summary>
		''' <returns>A new, empty ProductoDerivadoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ProductoDerivadoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProductoDerivado
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ProductoDerivadoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProductoDerivadoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ProductoDerivadoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ProductoDerivadoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ProductoDerivadoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ProductoMezclaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ProductoMezclaEntityFactory 
#Else
	<Serializable()> _
	Public Class ProductoMezclaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ProductoMezclaEntity object.</summary>
		''' <returns>A new, empty ProductoMezclaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ProductoMezclaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProductoMezcla
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ProductoMezclaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProductoMezclaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ProductoMezclaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ProductoMezclaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ProductoMezclaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ProrraRecEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ProrraRecEntityFactory 
#Else
	<Serializable()> _
	Public Class ProrraRecEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ProrraRecEntity object.</summary>
		''' <returns>A new, empty ProrraRecEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ProrraRecEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProrraRec
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ProrraRecEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProrraRecUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ProrraRecEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ProrraRecCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ProrraRecEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ProveedorEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ProveedorEntityFactory 
#Else
	<Serializable()> _
	Public Class ProveedorEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ProveedorEntity object.</summary>
		''' <returns>A new, empty ProveedorEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ProveedorEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProveedor
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ProveedorEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProveedorUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ProveedorEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ProveedorCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ProveedorEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ProveedorAvanzadoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ProveedorAvanzadoEntityFactory 
#Else
	<Serializable()> _
	Public Class ProveedorAvanzadoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ProveedorAvanzadoEntity object.</summary>
		''' <returns>A new, empty ProveedorAvanzadoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ProveedorAvanzadoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProveedorAvanzado
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ProveedorAvanzadoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewProveedorAvanzadoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ProveedorAvanzadoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ProveedorAvanzadoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ProveedorAvanzadoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PvnotasVentaRetCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PvnotasVentaRetCabEntityFactory 
#Else
	<Serializable()> _
	Public Class PvnotasVentaRetCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PvnotasVentaRetCabEntity object.</summary>
		''' <returns>A new, empty PvnotasVentaRetCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PvnotasVentaRetCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPvnotasVentaRetCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PvnotasVentaRetCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPvnotasVentaRetCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PvnotasVentaRetCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PvnotasVentaRetCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PvnotasVentaRetCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty PvnotasVentaRetDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class PvnotasVentaRetDetEntityFactory 
#Else
	<Serializable()> _
	Public Class PvnotasVentaRetDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty PvnotasVentaRetDetEntity object.</summary>
		''' <returns>A new, empty PvnotasVentaRetDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New PvnotasVentaRetDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPvnotasVentaRetDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new PvnotasVentaRetDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewPvnotasVentaRetDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.PvnotasVentaRetDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New PvnotasVentaRetDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "PvnotasVentaRetDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty RecepcionGanadoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class RecepcionGanadoEntityFactory 
#Else
	<Serializable()> _
	Public Class RecepcionGanadoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty RecepcionGanadoEntity object.</summary>
		''' <returns>A new, empty RecepcionGanadoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New RecepcionGanadoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRecepcionGanado
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new RecepcionGanadoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRecepcionGanadoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.RecepcionGanadoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New RecepcionGanadoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "RecepcionGanadoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty RecepcionOrdenCompraEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class RecepcionOrdenCompraEntityFactory 
#Else
	<Serializable()> _
	Public Class RecepcionOrdenCompraEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty RecepcionOrdenCompraEntity object.</summary>
		''' <returns>A new, empty RecepcionOrdenCompraEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New RecepcionOrdenCompraEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRecepcionOrdenCompra
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new RecepcionOrdenCompraEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRecepcionOrdenCompraUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.RecepcionOrdenCompraEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New RecepcionOrdenCompraCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "RecepcionOrdenCompraEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ReferenciaProductoDerivadoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ReferenciaProductoDerivadoEntityFactory 
#Else
	<Serializable()> _
	Public Class ReferenciaProductoDerivadoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ReferenciaProductoDerivadoEntity object.</summary>
		''' <returns>A new, empty ReferenciaProductoDerivadoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ReferenciaProductoDerivadoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewReferenciaProductoDerivado
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ReferenciaProductoDerivadoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewReferenciaProductoDerivadoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ReferenciaProductoDerivadoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ReferenciaProductoDerivadoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ReferenciaProductoDerivadoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty RegistroSacrificiosCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class RegistroSacrificiosCabEntityFactory 
#Else
	<Serializable()> _
	Public Class RegistroSacrificiosCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty RegistroSacrificiosCabEntity object.</summary>
		''' <returns>A new, empty RegistroSacrificiosCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New RegistroSacrificiosCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRegistroSacrificiosCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new RegistroSacrificiosCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRegistroSacrificiosCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.RegistroSacrificiosCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New RegistroSacrificiosCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "RegistroSacrificiosCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty RegistroSacrificiosDecomisosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class RegistroSacrificiosDecomisosEntityFactory 
#Else
	<Serializable()> _
	Public Class RegistroSacrificiosDecomisosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty RegistroSacrificiosDecomisosEntity object.</summary>
		''' <returns>A new, empty RegistroSacrificiosDecomisosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New RegistroSacrificiosDecomisosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRegistroSacrificiosDecomisos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new RegistroSacrificiosDecomisosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRegistroSacrificiosDecomisosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.RegistroSacrificiosDecomisosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New RegistroSacrificiosDecomisosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "RegistroSacrificiosDecomisosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty RegistroSacrificiosDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class RegistroSacrificiosDetEntityFactory 
#Else
	<Serializable()> _
	Public Class RegistroSacrificiosDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty RegistroSacrificiosDetEntity object.</summary>
		''' <returns>A new, empty RegistroSacrificiosDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New RegistroSacrificiosDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRegistroSacrificiosDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new RegistroSacrificiosDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRegistroSacrificiosDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.RegistroSacrificiosDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New RegistroSacrificiosDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "RegistroSacrificiosDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty RetiroCajaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class RetiroCajaEntityFactory 
#Else
	<Serializable()> _
	Public Class RetiroCajaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty RetiroCajaEntity object.</summary>
		''' <returns>A new, empty RetiroCajaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New RetiroCajaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRetiroCaja
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new RetiroCajaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRetiroCajaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.RetiroCajaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New RetiroCajaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "RetiroCajaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty RFCEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class RFCEntityFactory 
#Else
	<Serializable()> _
	Public Class RFCEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty RFCEntity object.</summary>
		''' <returns>A new, empty RFCEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New RFCEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRFC
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new RFCEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewRFCUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.RFCEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New RFCCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "RFCEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty SalidaGanadoCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class SalidaGanadoCabEntityFactory 
#Else
	<Serializable()> _
	Public Class SalidaGanadoCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty SalidaGanadoCabEntity object.</summary>
		''' <returns>A new, empty SalidaGanadoCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New SalidaGanadoCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSalidaGanadoCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new SalidaGanadoCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSalidaGanadoCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.SalidaGanadoCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New SalidaGanadoCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "SalidaGanadoCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty SalidaGanadoDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class SalidaGanadoDetEntityFactory 
#Else
	<Serializable()> _
	Public Class SalidaGanadoDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty SalidaGanadoDetEntity object.</summary>
		''' <returns>A new, empty SalidaGanadoDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New SalidaGanadoDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSalidaGanadoDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new SalidaGanadoDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSalidaGanadoDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.SalidaGanadoDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New SalidaGanadoDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "SalidaGanadoDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty SatAgrupadorEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class SatAgrupadorEntityFactory 
#Else
	<Serializable()> _
	Public Class SatAgrupadorEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty SatAgrupadorEntity object.</summary>
		''' <returns>A new, empty SatAgrupadorEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New SatAgrupadorEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSatAgrupador
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new SatAgrupadorEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSatAgrupadorUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.SatAgrupadorEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New SatAgrupadorCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "SatAgrupadorEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ServiciosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ServiciosEntityFactory 
#Else
	<Serializable()> _
	Public Class ServiciosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ServiciosEntity object.</summary>
		''' <returns>A new, empty ServiciosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ServiciosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewServicios
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ServiciosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewServiciosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ServiciosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ServiciosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ServiciosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ServiciosPorSacrificioEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ServiciosPorSacrificioEntityFactory 
#Else
	<Serializable()> _
	Public Class ServiciosPorSacrificioEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ServiciosPorSacrificioEntity object.</summary>
		''' <returns>A new, empty ServiciosPorSacrificioEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ServiciosPorSacrificioEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewServiciosPorSacrificio
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ServiciosPorSacrificioEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewServiciosPorSacrificioUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ServiciosPorSacrificioEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ServiciosPorSacrificioCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ServiciosPorSacrificioEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ServiciosXembarqueEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ServiciosXembarqueEntityFactory 
#Else
	<Serializable()> _
	Public Class ServiciosXembarqueEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ServiciosXembarqueEntity object.</summary>
		''' <returns>A new, empty ServiciosXembarqueEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ServiciosXembarqueEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewServiciosXembarque
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ServiciosXembarqueEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewServiciosXembarqueUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ServiciosXembarqueEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ServiciosXembarqueCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ServiciosXembarqueEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty SolicitudProductoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class SolicitudProductoEntityFactory 
#Else
	<Serializable()> _
	Public Class SolicitudProductoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty SolicitudProductoEntity object.</summary>
		''' <returns>A new, empty SolicitudProductoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New SolicitudProductoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSolicitudProducto
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new SolicitudProductoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSolicitudProductoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.SolicitudProductoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New SolicitudProductoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "SolicitudProductoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty SolicitudProductoDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class SolicitudProductoDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class SolicitudProductoDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty SolicitudProductoDetalleEntity object.</summary>
		''' <returns>A new, empty SolicitudProductoDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New SolicitudProductoDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSolicitudProductoDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new SolicitudProductoDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSolicitudProductoDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.SolicitudProductoDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New SolicitudProductoDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "SolicitudProductoDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty SolicitudServiciosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class SolicitudServiciosEntityFactory 
#Else
	<Serializable()> _
	Public Class SolicitudServiciosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty SolicitudServiciosEntity object.</summary>
		''' <returns>A new, empty SolicitudServiciosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New SolicitudServiciosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSolicitudServicios
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new SolicitudServiciosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSolicitudServiciosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.SolicitudServiciosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New SolicitudServiciosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "SolicitudServiciosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty SolicitudServiciosDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class SolicitudServiciosDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class SolicitudServiciosDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty SolicitudServiciosDetalleEntity object.</summary>
		''' <returns>A new, empty SolicitudServiciosDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New SolicitudServiciosDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSolicitudServiciosDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new SolicitudServiciosDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSolicitudServiciosDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.SolicitudServiciosDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New SolicitudServiciosDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "SolicitudServiciosDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty SubLineaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class SubLineaEntityFactory 
#Else
	<Serializable()> _
	Public Class SubLineaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty SubLineaEntity object.</summary>
		''' <returns>A new, empty SubLineaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New SubLineaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSubLinea
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new SubLineaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSubLineaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.SubLineaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New SubLineaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "SubLineaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty SucursalEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class SucursalEntityFactory 
#Else
	<Serializable()> _
	Public Class SucursalEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty SucursalEntity object.</summary>
		''' <returns>A new, empty SucursalEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New SucursalEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSucursal
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new SucursalEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewSucursalUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.SucursalEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New SucursalCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "SucursalEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty TipoAlmacenEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class TipoAlmacenEntityFactory 
#Else
	<Serializable()> _
	Public Class TipoAlmacenEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty TipoAlmacenEntity object.</summary>
		''' <returns>A new, empty TipoAlmacenEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New TipoAlmacenEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoAlmacen
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new TipoAlmacenEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoAlmacenUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.TipoAlmacenEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New TipoAlmacenCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "TipoAlmacenEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty TipoCambioEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class TipoCambioEntityFactory 
#Else
	<Serializable()> _
	Public Class TipoCambioEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty TipoCambioEntity object.</summary>
		''' <returns>A new, empty TipoCambioEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New TipoCambioEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoCambio
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new TipoCambioEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoCambioUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.TipoCambioEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New TipoCambioCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "TipoCambioEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty TipoComicionistaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class TipoComicionistaEntityFactory 
#Else
	<Serializable()> _
	Public Class TipoComicionistaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty TipoComicionistaEntity object.</summary>
		''' <returns>A new, empty TipoComicionistaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New TipoComicionistaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoComicionista
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new TipoComicionistaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoComicionistaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.TipoComicionistaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New TipoComicionistaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "TipoComicionistaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty TipoMonedaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class TipoMonedaEntityFactory 
#Else
	<Serializable()> _
	Public Class TipoMonedaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty TipoMonedaEntity object.</summary>
		''' <returns>A new, empty TipoMonedaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New TipoMonedaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoMoneda
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new TipoMonedaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoMonedaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.TipoMonedaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New TipoMonedaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "TipoMonedaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty TipoMotivoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class TipoMotivoEntityFactory 
#Else
	<Serializable()> _
	Public Class TipoMotivoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty TipoMotivoEntity object.</summary>
		''' <returns>A new, empty TipoMotivoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New TipoMotivoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoMotivo
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new TipoMotivoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoMotivoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.TipoMotivoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New TipoMotivoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "TipoMotivoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty TipoMovimientoAlmacenEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class TipoMovimientoAlmacenEntityFactory 
#Else
	<Serializable()> _
	Public Class TipoMovimientoAlmacenEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty TipoMovimientoAlmacenEntity object.</summary>
		''' <returns>A new, empty TipoMovimientoAlmacenEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New TipoMovimientoAlmacenEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoMovimientoAlmacen
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new TipoMovimientoAlmacenEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoMovimientoAlmacenUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.TipoMovimientoAlmacenEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New TipoMovimientoAlmacenCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "TipoMovimientoAlmacenEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty TipoPresupuestoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class TipoPresupuestoEntityFactory 
#Else
	<Serializable()> _
	Public Class TipoPresupuestoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty TipoPresupuestoEntity object.</summary>
		''' <returns>A new, empty TipoPresupuestoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New TipoPresupuestoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoPresupuesto
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new TipoPresupuestoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoPresupuestoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.TipoPresupuestoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New TipoPresupuestoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "TipoPresupuestoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty TipoProductoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class TipoProductoEntityFactory 
#Else
	<Serializable()> _
	Public Class TipoProductoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty TipoProductoEntity object.</summary>
		''' <returns>A new, empty TipoProductoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New TipoProductoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoProducto
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new TipoProductoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoProductoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.TipoProductoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New TipoProductoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "TipoProductoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty TipoProveedorEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class TipoProveedorEntityFactory 
#Else
	<Serializable()> _
	Public Class TipoProveedorEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty TipoProveedorEntity object.</summary>
		''' <returns>A new, empty TipoProveedorEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New TipoProveedorEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoProveedor
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new TipoProveedorEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoProveedorUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.TipoProveedorEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New TipoProveedorCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "TipoProveedorEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty TipoVentaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class TipoVentaEntityFactory 
#Else
	<Serializable()> _
	Public Class TipoVentaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty TipoVentaEntity object.</summary>
		''' <returns>A new, empty TipoVentaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New TipoVentaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoVenta
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new TipoVentaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewTipoVentaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.TipoVentaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New TipoVentaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "TipoVentaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UnidadMedidaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UnidadMedidaEntityFactory 
#Else
	<Serializable()> _
	Public Class UnidadMedidaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UnidadMedidaEntity object.</summary>
		''' <returns>A new, empty UnidadMedidaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UnidadMedidaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUnidadMedida
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UnidadMedidaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUnidadMedidaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UnidadMedidaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UnidadMedidaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UnidadMedidaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsrBanDepositosEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsrBanDepositosEntityFactory 
#Else
	<Serializable()> _
	Public Class UsrBanDepositosEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsrBanDepositosEntity object.</summary>
		''' <returns>A new, empty UsrBanDepositosEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsrBanDepositosEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrBanDepositos
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsrBanDepositosEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrBanDepositosUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsrBanDepositosEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsrBanDepositosCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsrBanDepositosEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsrConfigContabilidadEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsrConfigContabilidadEntityFactory 
#Else
	<Serializable()> _
	Public Class UsrConfigContabilidadEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsrConfigContabilidadEntity object.</summary>
		''' <returns>A new, empty UsrConfigContabilidadEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsrConfigContabilidadEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrConfigContabilidad
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsrConfigContabilidadEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrConfigContabilidadUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsrConfigContabilidadEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsrConfigContabilidadCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsrConfigContabilidadEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsrCxpfacturasApagarEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsrCxpfacturasApagarEntityFactory 
#Else
	<Serializable()> _
	Public Class UsrCxpfacturasApagarEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsrCxpfacturasApagarEntity object.</summary>
		''' <returns>A new, empty UsrCxpfacturasApagarEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsrCxpfacturasApagarEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrCxpfacturasApagar
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsrCxpfacturasApagarEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrCxpfacturasApagarUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsrCxpfacturasApagarEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsrCxpfacturasApagarCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsrCxpfacturasApagarEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsrCxpfacturasCabEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsrCxpfacturasCabEntityFactory 
#Else
	<Serializable()> _
	Public Class UsrCxpfacturasCabEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsrCxpfacturasCabEntity object.</summary>
		''' <returns>A new, empty UsrCxpfacturasCabEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsrCxpfacturasCabEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrCxpfacturasCab
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsrCxpfacturasCabEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrCxpfacturasCabUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsrCxpfacturasCabEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsrCxpfacturasCabCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsrCxpfacturasCabEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsrCxpfacturasDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsrCxpfacturasDetEntityFactory 
#Else
	<Serializable()> _
	Public Class UsrCxpfacturasDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsrCxpfacturasDetEntity object.</summary>
		''' <returns>A new, empty UsrCxpfacturasDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsrCxpfacturasDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrCxpfacturasDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsrCxpfacturasDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrCxpfacturasDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsrCxpfacturasDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsrCxpfacturasDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsrCxpfacturasDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsrCxpfacturasDetRecepcionesEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsrCxpfacturasDetRecepcionesEntityFactory 
#Else
	<Serializable()> _
	Public Class UsrCxpfacturasDetRecepcionesEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsrCxpfacturasDetRecepcionesEntity object.</summary>
		''' <returns>A new, empty UsrCxpfacturasDetRecepcionesEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsrCxpfacturasDetRecepcionesEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrCxpfacturasDetRecepciones
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsrCxpfacturasDetRecepcionesEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrCxpfacturasDetRecepcionesUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsrCxpfacturasDetRecepcionesEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsrCxpfacturasDetRecepcionesCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsrCxpfacturasDetRecepcionesEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsrCxppagosProveedoresEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsrCxppagosProveedoresEntityFactory 
#Else
	<Serializable()> _
	Public Class UsrCxppagosProveedoresEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsrCxppagosProveedoresEntity object.</summary>
		''' <returns>A new, empty UsrCxppagosProveedoresEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsrCxppagosProveedoresEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrCxppagosProveedores
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsrCxppagosProveedoresEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrCxppagosProveedoresUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsrCxppagosProveedoresEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsrCxppagosProveedoresCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsrCxppagosProveedoresEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsrProdConfiguracionEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsrProdConfiguracionEntityFactory 
#Else
	<Serializable()> _
	Public Class UsrProdConfiguracionEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsrProdConfiguracionEntity object.</summary>
		''' <returns>A new, empty UsrProdConfiguracionEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsrProdConfiguracionEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrProdConfiguracion
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsrProdConfiguracionEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrProdConfiguracionUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsrProdConfiguracionEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsrProdConfiguracionCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsrProdConfiguracionEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsrProdRecepcionDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsrProdRecepcionDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class UsrProdRecepcionDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsrProdRecepcionDetalleEntity object.</summary>
		''' <returns>A new, empty UsrProdRecepcionDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsrProdRecepcionDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrProdRecepcionDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsrProdRecepcionDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrProdRecepcionDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsrProdRecepcionDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsrProdRecepcionDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsrProdRecepcionDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsrProdRecepcionGanadoDetEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsrProdRecepcionGanadoDetEntityFactory 
#Else
	<Serializable()> _
	Public Class UsrProdRecepcionGanadoDetEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsrProdRecepcionGanadoDetEntity object.</summary>
		''' <returns>A new, empty UsrProdRecepcionGanadoDetEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsrProdRecepcionGanadoDetEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrProdRecepcionGanadoDet
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsrProdRecepcionGanadoDetEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrProdRecepcionGanadoDetUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsrProdRecepcionGanadoDetEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsrProdRecepcionGanadoDetCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsrProdRecepcionGanadoDetEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsrProdRegistroSacrificiosDecomisoEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsrProdRegistroSacrificiosDecomisoEntityFactory 
#Else
	<Serializable()> _
	Public Class UsrProdRegistroSacrificiosDecomisoEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsrProdRegistroSacrificiosDecomisoEntity object.</summary>
		''' <returns>A new, empty UsrProdRegistroSacrificiosDecomisoEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsrProdRegistroSacrificiosDecomisoEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrProdRegistroSacrificiosDecomiso
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsrProdRegistroSacrificiosDecomisoEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsrProdRegistroSacrificiosDecomisoUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsrProdRegistroSacrificiosDecomisoEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsrProdRegistroSacrificiosDecomisoCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsrProdRegistroSacrificiosDecomisoEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsuariosSucursalEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsuariosSucursalEntityFactory 
#Else
	<Serializable()> _
	Public Class UsuariosSucursalEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsuariosSucursalEntity object.</summary>
		''' <returns>A new, empty UsuariosSucursalEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsuariosSucursalEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsuariosSucursal
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsuariosSucursalEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsuariosSucursalUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsuariosSucursalEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsuariosSucursalCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsuariosSucursalEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty UsuarioSucursalEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class UsuarioSucursalEntityFactory 
#Else
	<Serializable()> _
	Public Class UsuarioSucursalEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty UsuarioSucursalEntity object.</summary>
		''' <returns>A new, empty UsuarioSucursalEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New UsuarioSucursalEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsuarioSucursal
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new UsuarioSucursalEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewUsuarioSucursalUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.UsuarioSucursalEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New UsuarioSucursalCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "UsuarioSucursalEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ZonaEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ZonaEntityFactory 
#Else
	<Serializable()> _
	Public Class ZonaEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ZonaEntity object.</summary>
		''' <returns>A new, empty ZonaEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ZonaEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewZona
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ZonaEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewZonaUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ZonaEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ZonaCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ZonaEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class

	
	''' <summary>
	''' Factory to create new, empty ZonaDetalleEntity objects.
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class ZonaDetalleEntityFactory 
#Else
	<Serializable()> _
	Public Class ZonaDetalleEntityFactory 
#End If
		Implements IEntityFactory

		''' <summary>CTor</summary>
		Public Sub New()
		End Sub

		''' <summary>Creates a new, empty ZonaDetalleEntity object.</summary>
		''' <returns>A new, empty ZonaDetalleEntity object.</returns>
		Public Overridable Overloads Function Create() As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = New ZonaDetalleEntity()
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewZonaDetalle
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn

		End Function
		
		
		''' <summary>Creates a new ZonaDetalleEntity instance but uses a special constructor which will set the Fields object of the new
		''' IEntity instance to the passed in fields object. Implement this method to support multi-type in single table inheritance.</summary>
		''' <param name="fields">Populated IEntityFields object for the new IEntity to create</param>
		''' <returns>Fully created and populated (due to the IEntityFields object) IEntity object</returns>
		Public Overridable Overloads Function Create(fields As IEntityFields) As IEntity Implements IEntityFactory.Create
			Dim toReturn As IEntity = Create()
			toReturn.Fields = fields
			
			' __LLBLGENPRO_USER_CODE_REGION_START CreateNewZonaDetalleUsingFields
			' __LLBLGENPRO_USER_CODE_REGION_END		
			Return toReturn
		End Function


		''' <summary>Creates, using the generated EntityFieldsFactory, the IEntityFields object for the entity to create. This method is used
		''' by internal code to create the fields object to store fetched data. </summary>
		''' <returns>Empty IEntityFields object.</returns>
		Public Overridable Function CreateFields() As IEntityFields Implements IEntityFactory.CreateFields
			Return EntityFieldsFactory.CreateEntityFieldsObject(Integralab.ORM.EntityType.ZonaDetalleEntity)
		End Function
		
		''' <summary>Creates the hierarchy fields For the entity To which this factory belongs.</summary>
		''' <returns>IEntityFields Object With the fields of all the entities In teh hierarchy of this entity Or the fields of this entity If
		''' the entity isn't in a hierarchy.</returns>
		Public Overridable Function CreateHierarchyFields() As IEntityFields Implements IEntityFactory.CreateHierarchyFields
			Return Me.CreateFields()
		End Function
		
		''' <summary>Creates the relations collection To the entity To Join all targets so this entity can be fetched. </summary>
		''' <returns>null If the entity isn't in a hierarchy of type TargetPerEntity, otherwise the relations collection needed to
		''' Join all targets together To fetch all subtypes of this entity And this entity itself</returns>
		Public Overridable Function  CreateHierarchyRelations() As IRelationCollection Implements IEntityFactory.CreateHierarchyRelations
			Return Nothing
		End Function

		''' <summary>This method retrieves, using the InheritanceInfoprovider, the factory For the entity represented by the values passed In.</summary>
		''' <param name="fieldValues">Field values read from the db, To determine which factory To Return, based On the field values passed In.</param>
		''' <param name="entityFieldStartIndexesPerEntity">indexes into values where per entity type their own fields start.</param>
		''' <returns>the factory For the entity which Is represented by the values passed In.</returns>
		Public Overridable Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory Implements IEntityFactory.GetEntityFactory
			Return Me
		End Function
				
		''' <summary>Creates a New entity collection For the entity of this factory.</summary>
		''' <returns>ready To use New entity collection, typed.</returns>
		Public Overridable Function CreateEntityCollection() As IEntityCollection Implements IEntityFactory.CreateEntityCollection
			Return New ZonaDetalleCollection()
		End Function
	
		''' <summary>returns the name of the entity this factory Is For, e.g. "EmployeeEntity"</summary>
		Public Overridable ReadOnly Property ForEntityName() As String Implements IEntityFactory.ForEntityName
			Get 
				Return "ZonaDetalleEntity"
			End Get
		End Property

#Region "Included Code"

#End Region
	End Class



	''' <summary>
	''' Factory to create new, empty Entity objects based on the entity type specified. Uses 
	''' entity specific factory objects
	''' </summary>
#If CF Then
	<SD.LLBLGen.Pro.ORMSupportClasses.Serializable()> _
	Public Class GeneralEntityFactory
#Else
	<Serializable()> _
	Public Class GeneralEntityFactory
#End If
		''' <summary>Creates a new, empty Entity object of the type specified</summary>
		''' <param name="entityTypeToCreate">The entity type to create.</param>
		''' <returns>A new, empty Entity object.</returns>
		Public Shared Function Create(entityTypeToCreate As EntityType) As IEntity 
			Dim factoryToUse As IEntityFactory = Nothing

			Select Case entityTypeToCreate
				Case Integralab.ORM.EntityType.AcumuladoCuentasContablesEntity
					factoryToUse = New AcumuladoCuentasContablesEntityFactory()
				Case Integralab.ORM.EntityType.AlmacenEntity
					factoryToUse = New AlmacenEntityFactory()
				Case Integralab.ORM.EntityType.AlmacenCatalogoEntity
					factoryToUse = New AlmacenCatalogoEntityFactory()
				Case Integralab.ORM.EntityType.AlmacenesFamiliasEntity
					factoryToUse = New AlmacenesFamiliasEntityFactory()
				Case Integralab.ORM.EntityType.AlmacenesSucursalEntity
					factoryToUse = New AlmacenesSucursalEntityFactory()
				Case Integralab.ORM.EntityType.AlmacenSucursalEntity
					factoryToUse = New AlmacenSucursalEntityFactory()
				Case Integralab.ORM.EntityType.AplicMediEntity
					factoryToUse = New AplicMediEntityFactory()
				Case Integralab.ORM.EntityType.AplicMediDetEntity
					factoryToUse = New AplicMediDetEntityFactory()
				Case Integralab.ORM.EntityType.AplicMediDetDetEntity
					factoryToUse = New AplicMediDetDetEntityFactory()
				Case Integralab.ORM.EntityType.AutCreditoEmbEntity
					factoryToUse = New AutCreditoEmbEntityFactory()
				Case Integralab.ORM.EntityType.AutorizaProcesosEntity
					factoryToUse = New AutorizaProcesosEntityFactory()
				Case Integralab.ORM.EntityType.BancosEntity
					factoryToUse = New BancosEntityFactory()
				Case Integralab.ORM.EntityType.BeneficiarioEntity
					factoryToUse = New BeneficiarioEntityFactory()
				Case Integralab.ORM.EntityType.BitacoraFolioEntity
					factoryToUse = New BitacoraFolioEntityFactory()
				Case Integralab.ORM.EntityType.BitacoraPvEntity
					factoryToUse = New BitacoraPvEntityFactory()
				Case Integralab.ORM.EntityType.CabAplForEntity
					factoryToUse = New CabAplForEntityFactory()
				Case Integralab.ORM.EntityType.CabBalanceEntity
					factoryToUse = New CabBalanceEntityFactory()
				Case Integralab.ORM.EntityType.CabEdoResEntity
					factoryToUse = New CabEdoResEntityFactory()
				Case Integralab.ORM.EntityType.CabFacturasEntity
					factoryToUse = New CabFacturasEntityFactory()
				Case Integralab.ORM.EntityType.CabGasTransEntity
					factoryToUse = New CabGasTransEntityFactory()
				Case Integralab.ORM.EntityType.CabMediReimEntity
					factoryToUse = New CabMediReimEntityFactory()
				Case Integralab.ORM.EntityType.CabMediTrabEntity
					factoryToUse = New CabMediTrabEntityFactory()
				Case Integralab.ORM.EntityType.CabMovGanEntity
					factoryToUse = New CabMovGanEntityFactory()
				Case Integralab.ORM.EntityType.CabPrepFormEntity
					factoryToUse = New CabPrepFormEntityFactory()
				Case Integralab.ORM.EntityType.CabProMedEntity
					factoryToUse = New CabProMedEntityFactory()
				Case Integralab.ORM.EntityType.CabRecCorEntity
					factoryToUse = New CabRecCorEntityFactory()
				Case Integralab.ORM.EntityType.CabRegComEntity
					factoryToUse = New CabRegComEntityFactory()
				Case Integralab.ORM.EntityType.CatAgrupadoresBalGralEdoResEntity
					factoryToUse = New CatAgrupadoresBalGralEdoResEntityFactory()
				Case Integralab.ORM.EntityType.CatDeptosEntity
					factoryToUse = New CatDeptosEntityFactory()
				Case Integralab.ORM.EntityType.CatIntroductoresEntity
					factoryToUse = New CatIntroductoresEntityFactory()
				Case Integralab.ORM.EntityType.CatLugaresDeCompraEntity
					factoryToUse = New CatLugaresDeCompraEntityFactory()
				Case Integralab.ORM.EntityType.CatLugComEntity
					factoryToUse = New CatLugComEntityFactory()
				Case Integralab.ORM.EntityType.CatMovGanEntity
					factoryToUse = New CatMovGanEntityFactory()
				Case Integralab.ORM.EntityType.CatMovimientosAlmacenPvEntity
					factoryToUse = New CatMovimientosAlmacenPvEntityFactory()
				Case Integralab.ORM.EntityType.CatNutrientesEntity
					factoryToUse = New CatNutrientesEntityFactory()
				Case Integralab.ORM.EntityType.CatPrexCortEntity
					factoryToUse = New CatPrexCortEntityFactory()
				Case Integralab.ORM.EntityType.CatPrexProdEntity
					factoryToUse = New CatPrexProdEntityFactory()
				Case Integralab.ORM.EntityType.CatProveedoresEntity
					factoryToUse = New CatProveedoresEntityFactory()
				Case Integralab.ORM.EntityType.CatRastrosEntity
					factoryToUse = New CatRastrosEntityFactory()
				Case Integralab.ORM.EntityType.CatTipNotasEntity
					factoryToUse = New CatTipNotasEntityFactory()
				Case Integralab.ORM.EntityType.CfgCtrlCtasEntity
					factoryToUse = New CfgCtrlCtasEntityFactory()
				Case Integralab.ORM.EntityType.ChequeEntity
					factoryToUse = New ChequeEntityFactory()
				Case Integralab.ORM.EntityType.ChequeDevueltoEntity
					factoryToUse = New ChequeDevueltoEntityFactory()
				Case Integralab.ORM.EntityType.ChequesPosEntity
					factoryToUse = New ChequesPosEntityFactory()
				Case Integralab.ORM.EntityType.CierreFicticioEntity
					factoryToUse = New CierreFicticioEntityFactory()
				Case Integralab.ORM.EntityType.CierreLoteEntity
					factoryToUse = New CierreLoteEntityFactory()
				Case Integralab.ORM.EntityType.CiudadEntity
					factoryToUse = New CiudadEntityFactory()
				Case Integralab.ORM.EntityType.ClasificadorDeEstadosFinancierosEntity
					factoryToUse = New ClasificadorDeEstadosFinancierosEntityFactory()
				Case Integralab.ORM.EntityType.ClienteEntity
					factoryToUse = New ClienteEntityFactory()
				Case Integralab.ORM.EntityType.ComicionistaEntity
					factoryToUse = New ComicionistaEntityFactory()
				Case Integralab.ORM.EntityType.ConceptoCajaEntity
					factoryToUse = New ConceptoCajaEntityFactory()
				Case Integralab.ORM.EntityType.ConceptoFlujoEntity
					factoryToUse = New ConceptoFlujoEntityFactory()
				Case Integralab.ORM.EntityType.ConceptoFlujoCuentaEntity
					factoryToUse = New ConceptoFlujoCuentaEntityFactory()
				Case Integralab.ORM.EntityType.ConCfgCtasEntity
					factoryToUse = New ConCfgCtasEntityFactory()
				Case Integralab.ORM.EntityType.CondicionesPagoEntity
					factoryToUse = New CondicionesPagoEntityFactory()
				Case Integralab.ORM.EntityType.ConfigGanEntity
					factoryToUse = New ConfigGanEntityFactory()
				Case Integralab.ORM.EntityType.ConfigPuntoVtaEntity
					factoryToUse = New ConfigPuntoVtaEntityFactory()
				Case Integralab.ORM.EntityType.ConfiguracionChequesImpEntity
					factoryToUse = New ConfiguracionChequesImpEntityFactory()
				Case Integralab.ORM.EntityType.ConfiguracionFacturaEntity
					factoryToUse = New ConfiguracionFacturaEntityFactory()
				Case Integralab.ORM.EntityType.ConfiguracionLecturaEtiquetaEntity
					factoryToUse = New ConfiguracionLecturaEtiquetaEntityFactory()
				Case Integralab.ORM.EntityType.ConLotSacEntity
					factoryToUse = New ConLotSacEntityFactory()
				Case Integralab.ORM.EntityType.ConMesEntity
					factoryToUse = New ConMesEntityFactory()
				Case Integralab.ORM.EntityType.ControlTurnoEntity
					factoryToUse = New ControlTurnoEntityFactory()
				Case Integralab.ORM.EntityType.CostoIndirectoEntity
					factoryToUse = New CostoIndirectoEntityFactory()
				Case Integralab.ORM.EntityType.CostoProductoEntity
					factoryToUse = New CostoProductoEntityFactory()
				Case Integralab.ORM.EntityType.CostoProductoProveedorEntity
					factoryToUse = New CostoProductoProveedorEntityFactory()
				Case Integralab.ORM.EntityType.CotizacionServicioEntity
					factoryToUse = New CotizacionServicioEntityFactory()
				Case Integralab.ORM.EntityType.CotizacionServicioDetalleEntity
					factoryToUse = New CotizacionServicioDetalleEntityFactory()
				Case Integralab.ORM.EntityType.CuentaEntity
					factoryToUse = New CuentaEntityFactory()
				Case Integralab.ORM.EntityType.CuentaContableEntity
					factoryToUse = New CuentaContableEntityFactory()
				Case Integralab.ORM.EntityType.CuentasFiscalEntity
					factoryToUse = New CuentasFiscalEntityFactory()
				Case Integralab.ORM.EntityType.DetAlimentosEntity
					factoryToUse = New DetAlimentosEntityFactory()
				Case Integralab.ORM.EntityType.DetalleClasificadordeEstadosFinancierosEntity
					factoryToUse = New DetalleClasificadordeEstadosFinancierosEntityFactory()
				Case Integralab.ORM.EntityType.DetalleKitPvEntity
					factoryToUse = New DetalleKitPvEntityFactory()
				Case Integralab.ORM.EntityType.DetAplForEntity
					factoryToUse = New DetAplForEntityFactory()
				Case Integralab.ORM.EntityType.DetBalanceEntity
					factoryToUse = New DetBalanceEntityFactory()
				Case Integralab.ORM.EntityType.DetDproMedEntity
					factoryToUse = New DetDproMedEntityFactory()
				Case Integralab.ORM.EntityType.DetEdoResEntity
					factoryToUse = New DetEdoResEntityFactory()
				Case Integralab.ORM.EntityType.DetFacturasEntity
					factoryToUse = New DetFacturasEntityFactory()
				Case Integralab.ORM.EntityType.DetGasTransEntity
					factoryToUse = New DetGasTransEntityFactory()
				Case Integralab.ORM.EntityType.DetMovGanEntity
					factoryToUse = New DetMovGanEntityFactory()
				Case Integralab.ORM.EntityType.DetPrepFormEntity
					factoryToUse = New DetPrepFormEntityFactory()
				Case Integralab.ORM.EntityType.DetPrepFormLoteEntity
					factoryToUse = New DetPrepFormLoteEntityFactory()
				Case Integralab.ORM.EntityType.DetProMedEntity
					factoryToUse = New DetProMedEntityFactory()
				Case Integralab.ORM.EntityType.DetRecCorEntity
					factoryToUse = New DetRecCorEntityFactory()
				Case Integralab.ORM.EntityType.DetRegComEntity
					factoryToUse = New DetRegComEntityFactory()
				Case Integralab.ORM.EntityType.DevolucionProductosEntity
					factoryToUse = New DevolucionProductosEntityFactory()
				Case Integralab.ORM.EntityType.DocumentoEntity
					factoryToUse = New DocumentoEntityFactory()
				Case Integralab.ORM.EntityType.DocumentoDetalleEntity
					factoryToUse = New DocumentoDetalleEntityFactory()
				Case Integralab.ORM.EntityType.DocumentoImagenEntity
					factoryToUse = New DocumentoImagenEntityFactory()
				Case Integralab.ORM.EntityType.DocumentoTextoEntity
					factoryToUse = New DocumentoTextoEntityFactory()
				Case Integralab.ORM.EntityType.DocumentoTipoEntity
					factoryToUse = New DocumentoTipoEntityFactory()
				Case Integralab.ORM.EntityType.DocumentoTipoCampoEntity
					factoryToUse = New DocumentoTipoCampoEntityFactory()
				Case Integralab.ORM.EntityType.DomicilioFiscalEntity
					factoryToUse = New DomicilioFiscalEntityFactory()
				Case Integralab.ORM.EntityType.DomicilioFiscalesClientesEntity
					factoryToUse = New DomicilioFiscalesClientesEntityFactory()
				Case Integralab.ORM.EntityType.ECtSatcatBancosEntity
					factoryToUse = New ECtSatcatBancosEntityFactory()
				Case Integralab.ORM.EntityType.EstadoEntity
					factoryToUse = New EstadoEntityFactory()
				Case Integralab.ORM.EntityType.FacturaFoliosEntity
					factoryToUse = New FacturaFoliosEntityFactory()
				Case Integralab.ORM.EntityType.FacturasClientesCabEntity
					factoryToUse = New FacturasClientesCabEntityFactory()
				Case Integralab.ORM.EntityType.FacturasClientesDetEntity
					factoryToUse = New FacturasClientesDetEntityFactory()
				Case Integralab.ORM.EntityType.FacturasClientesDetProductosTotalesEntity
					factoryToUse = New FacturasClientesDetProductosTotalesEntityFactory()
				Case Integralab.ORM.EntityType.FolioEntity
					factoryToUse = New FolioEntityFactory()
				Case Integralab.ORM.EntityType.FolioFacturaEntity
					factoryToUse = New FolioFacturaEntityFactory()
				Case Integralab.ORM.EntityType.FormaPagoEntity
					factoryToUse = New FormaPagoEntityFactory()
				Case Integralab.ORM.EntityType.GastosDepartamentosEntity
					factoryToUse = New GastosDepartamentosEntityFactory()
				Case Integralab.ORM.EntityType.HistorialCambiosFechaEntity
					factoryToUse = New HistorialCambiosFechaEntityFactory()
				Case Integralab.ORM.EntityType.IngresoCajaEntity
					factoryToUse = New IngresoCajaEntityFactory()
				Case Integralab.ORM.EntityType.InventarioAlmacenEntity
					factoryToUse = New InventarioAlmacenEntityFactory()
				Case Integralab.ORM.EntityType.inventarioAlmacenLotesEntity
					factoryToUse = New inventarioAlmacenLotesEntityFactory()
				Case Integralab.ORM.EntityType.InventarioConfiguracionEntity
					factoryToUse = New InventarioConfiguracionEntityFactory()
				Case Integralab.ORM.EntityType.InventarioFisicoEntity
					factoryToUse = New InventarioFisicoEntityFactory()
				Case Integralab.ORM.EntityType.InventarioMovimientoAlmacenEntity
					factoryToUse = New InventarioMovimientoAlmacenEntityFactory()
				Case Integralab.ORM.EntityType.InventarioMovimientoAlmacenDetallesEntity
					factoryToUse = New InventarioMovimientoAlmacenDetallesEntityFactory()
				Case Integralab.ORM.EntityType.InvHistorialPvEntity
					factoryToUse = New InvHistorialPvEntityFactory()
				Case Integralab.ORM.EntityType.LineaEntity
					factoryToUse = New LineaEntityFactory()
				Case Integralab.ORM.EntityType.ListadePreciosEntity
					factoryToUse = New ListadePreciosEntityFactory()
				Case Integralab.ORM.EntityType.ListaPrecioEntity
					factoryToUse = New ListaPrecioEntityFactory()
				Case Integralab.ORM.EntityType.ListaPrecioDetalleEntity
					factoryToUse = New ListaPrecioDetalleEntityFactory()
				Case Integralab.ORM.EntityType.MarcaEntity
					factoryToUse = New MarcaEntityFactory()
				Case Integralab.ORM.EntityType.McatCentroCostosEntity
					factoryToUse = New McatCentroCostosEntityFactory()
				Case Integralab.ORM.EntityType.McattiposclienteEntity
					factoryToUse = New McattiposclienteEntityFactory()
				Case Integralab.ORM.EntityType.McecatCorralesCabEntity
					factoryToUse = New McecatCorralesCabEntityFactory()
				Case Integralab.ORM.EntityType.McecatCorralesDetEntity
					factoryToUse = New McecatCorralesDetEntityFactory()
				Case Integralab.ORM.EntityType.McecatLotesCabEntity
					factoryToUse = New McecatLotesCabEntityFactory()
				Case Integralab.ORM.EntityType.McecatLotesCabForEntity
					factoryToUse = New McecatLotesCabForEntityFactory()
				Case Integralab.ORM.EntityType.McecatLotesDetEntity
					factoryToUse = New McecatLotesDetEntityFactory()
				Case Integralab.ORM.EntityType.McecatTiposCorralEntity
					factoryToUse = New McecatTiposCorralEntityFactory()
				Case Integralab.ORM.EntityType.McgcatCausasMuerteEntity
					factoryToUse = New McgcatCausasMuerteEntityFactory()
				Case Integralab.ORM.EntityType.McgcatChoferesEntity
					factoryToUse = New McgcatChoferesEntityFactory()
				Case Integralab.ORM.EntityType.McgcatCompradoresdeGanadoEntity
					factoryToUse = New McgcatCompradoresdeGanadoEntityFactory()
				Case Integralab.ORM.EntityType.McgcatConcepGastosEntity
					factoryToUse = New McgcatConcepGastosEntityFactory()
				Case Integralab.ORM.EntityType.McgcatMovGanadoEntity
					factoryToUse = New McgcatMovGanadoEntityFactory()
				Case Integralab.ORM.EntityType.McgcatTiposdeGanadoEntity
					factoryToUse = New McgcatTiposdeGanadoEntityFactory()
				Case Integralab.ORM.EntityType.McgcatVehiculosEntity
					factoryToUse = New McgcatVehiculosEntityFactory()
				Case Integralab.ORM.EntityType.McgcompraGanadoCabEntity
					factoryToUse = New McgcompraGanadoCabEntityFactory()
				Case Integralab.ORM.EntityType.McgcompraGanadoDetEntity
					factoryToUse = New McgcompraGanadoDetEntityFactory()
				Case Integralab.ORM.EntityType.McgconfiguracionMovimientoGanadoEntity
					factoryToUse = New McgconfiguracionMovimientoGanadoEntityFactory()
				Case Integralab.ORM.EntityType.McomCotizacionCompraEntity
					factoryToUse = New McomCotizacionCompraEntityFactory()
				Case Integralab.ORM.EntityType.McomCotizacionCompraProveedorEntity
					factoryToUse = New McomCotizacionCompraProveedorEntityFactory()
				Case Integralab.ORM.EntityType.McomCotizacionCompraProveedorDetalleEntity
					factoryToUse = New McomCotizacionCompraProveedorDetalleEntityFactory()
				Case Integralab.ORM.EntityType.McomRecepcionOrdenCompraDetEntity
					factoryToUse = New McomRecepcionOrdenCompraDetEntityFactory()
				Case Integralab.ORM.EntityType.MetodoCabEntity
					factoryToUse = New MetodoCabEntityFactory()
				Case Integralab.ORM.EntityType.MetodoDetEntity
					factoryToUse = New MetodoDetEntityFactory()
				Case Integralab.ORM.EntityType.MetodoPagoEntity
					factoryToUse = New MetodoPagoEntityFactory()
				Case Integralab.ORM.EntityType.MfacCatClientesEntity
					factoryToUse = New MfacCatClientesEntityFactory()
				Case Integralab.ORM.EntityType.MfacClientesDatosFiscalesEntity
					factoryToUse = New MfacClientesDatosFiscalesEntityFactory()
				Case Integralab.ORM.EntityType.MfacEmbarquesCabEntity
					factoryToUse = New MfacEmbarquesCabEntityFactory()
				Case Integralab.ORM.EntityType.MfacEmbarquesDetEntity
					factoryToUse = New MfacEmbarquesDetEntityFactory()
				Case Integralab.ORM.EntityType.MgcnfFoliadorAlmacenEntity
					factoryToUse = New MgcnfFoliadorAlmacenEntityFactory()
				Case Integralab.ORM.EntityType.MgcnfFoliadoresEntity
					factoryToUse = New MgcnfFoliadoresEntityFactory()
				Case Integralab.ORM.EntityType.MgcnfFoliosEntity
					factoryToUse = New MgcnfFoliosEntityFactory()
				Case Integralab.ORM.EntityType.MgralcatPuntosEntregaEntity
					factoryToUse = New MgralcatPuntosEntregaEntityFactory()
				Case Integralab.ORM.EntityType.MinvMovimientosAlmacenPvEntity
					factoryToUse = New MinvMovimientosAlmacenPvEntityFactory()
				Case Integralab.ORM.EntityType.MinvMovimientosAlmacenPvdetallesEntity
					factoryToUse = New MinvMovimientosAlmacenPvdetallesEntityFactory()
				Case Integralab.ORM.EntityType.MinvTransferenciaAlmacenEntradaEntity
					factoryToUse = New MinvTransferenciaAlmacenEntradaEntityFactory()
				Case Integralab.ORM.EntityType.MinvTransferenciaAlmacenEntradaDetalleEntity
					factoryToUse = New MinvTransferenciaAlmacenEntradaDetalleEntityFactory()
				Case Integralab.ORM.EntityType.MinvTransferenciaAlmacenProdEntity
					factoryToUse = New MinvTransferenciaAlmacenProdEntityFactory()
				Case Integralab.ORM.EntityType.MinvTransferenciaAlmacenProdDetalleEntity
					factoryToUse = New MinvTransferenciaAlmacenProdDetalleEntityFactory()
				Case Integralab.ORM.EntityType.MinvTransferenciaAlmacenSalidaEntity
					factoryToUse = New MinvTransferenciaAlmacenSalidaEntityFactory()
				Case Integralab.ORM.EntityType.MinvTransferenciaAlmacenSalidaDetalleEntity
					factoryToUse = New MinvTransferenciaAlmacenSalidaDetalleEntityFactory()
				Case Integralab.ORM.EntityType.ModuloEntity
					factoryToUse = New ModuloEntityFactory()
				Case Integralab.ORM.EntityType.MonedaEntity
					factoryToUse = New MonedaEntityFactory()
				Case Integralab.ORM.EntityType.MotivoBajaEntity
					factoryToUse = New MotivoBajaEntityFactory()
				Case Integralab.ORM.EntityType.MotivoBajaDetalleEntity
					factoryToUse = New MotivoBajaDetalleEntityFactory()
				Case Integralab.ORM.EntityType.MotivoCancelacionEntity
					factoryToUse = New MotivoCancelacionEntityFactory()
				Case Integralab.ORM.EntityType.MotivoCancelacionDetalleEntity
					factoryToUse = New MotivoCancelacionDetalleEntityFactory()
				Case Integralab.ORM.EntityType.MsccatDecomisosEntity
					factoryToUse = New MsccatDecomisosEntityFactory()
				Case Integralab.ORM.EntityType.MsccatMotivoDevolucionEntity
					factoryToUse = New MsccatMotivoDevolucionEntityFactory()
				Case Integralab.ORM.EntityType.MsccatMovtosAlmacenEntity
					factoryToUse = New MsccatMovtosAlmacenEntityFactory()
				Case Integralab.ORM.EntityType.MsccatProductosEntity
					factoryToUse = New MsccatProductosEntityFactory()
				Case Integralab.ORM.EntityType.MsccatProductosDetalleEntity
					factoryToUse = New MsccatProductosDetalleEntityFactory()
				Case Integralab.ORM.EntityType.MsccatServiciosRastroEntity
					factoryToUse = New MsccatServiciosRastroEntityFactory()
				Case Integralab.ORM.EntityType.MsccatTiposAlmacenEntity
					factoryToUse = New MsccatTiposAlmacenEntityFactory()
				Case Integralab.ORM.EntityType.MsccomprasCanalesEntity
					factoryToUse = New MsccomprasCanalesEntityFactory()
				Case Integralab.ORM.EntityType.MscconfigMovtosAlmacenEntity
					factoryToUse = New MscconfigMovtosAlmacenEntityFactory()
				Case Integralab.ORM.EntityType.MsccortesPreCortesEntity
					factoryToUse = New MsccortesPreCortesEntityFactory()
				Case Integralab.ORM.EntityType.MscdetCanalAcorteEntity
					factoryToUse = New MscdetCanalAcorteEntityFactory()
				Case Integralab.ORM.EntityType.MscdetCanalComprasEntity
					factoryToUse = New MscdetCanalComprasEntityFactory()
				Case Integralab.ORM.EntityType.MscinventarioFisicoEntity
					factoryToUse = New MscinventarioFisicoEntityFactory()
				Case Integralab.ORM.EntityType.MscinventarioProductoEntity
					factoryToUse = New MscinventarioProductoEntityFactory()
				Case Integralab.ORM.EntityType.MscloteCortesCabEntity
					factoryToUse = New MscloteCortesCabEntityFactory()
				Case Integralab.ORM.EntityType.MscloteCortesDetEntity
					factoryToUse = New MscloteCortesDetEntityFactory()
				Case Integralab.ORM.EntityType.MscloteCortesDetComparacionEntity
					factoryToUse = New MscloteCortesDetComparacionEntityFactory()
				Case Integralab.ORM.EntityType.MscmovtosAlmacenCabEntity
					factoryToUse = New MscmovtosAlmacenCabEntityFactory()
				Case Integralab.ORM.EntityType.MscmovtosAlmacenDetEntity
					factoryToUse = New MscmovtosAlmacenDetEntityFactory()
				Case Integralab.ORM.EntityType.MscproductosDecomisosEntity
					factoryToUse = New MscproductosDecomisosEntityFactory()
				Case Integralab.ORM.EntityType.MscproductosValorAgregadoEntity
					factoryToUse = New MscproductosValorAgregadoEntityFactory()
				Case Integralab.ORM.EntityType.MscrecepcionCanalesCabEntity
					factoryToUse = New MscrecepcionCanalesCabEntityFactory()
				Case Integralab.ORM.EntityType.MscrecepcionCanalesDetEntity
					factoryToUse = New MscrecepcionCanalesDetEntityFactory()
				Case Integralab.ORM.EntityType.MscregistroSacrificioCabEntity
					factoryToUse = New MscregistroSacrificioCabEntityFactory()
				Case Integralab.ORM.EntityType.MscrelacionCortesClientesEntity
					factoryToUse = New MscrelacionCortesClientesEntityFactory()
				Case Integralab.ORM.EntityType.MscrelacionProductosRastrosEntity
					factoryToUse = New MscrelacionProductosRastrosEntityFactory()
				Case Integralab.ORM.EntityType.MscsalidasGanadoCabEntity
					factoryToUse = New MscsalidasGanadoCabEntityFactory()
				Case Integralab.ORM.EntityType.MscsalidasGanadoDetEntity
					factoryToUse = New MscsalidasGanadoDetEntityFactory()
				Case Integralab.ORM.EntityType.MveCtaEntity
					factoryToUse = New MveCtaEntityFactory()
				Case Integralab.ORM.EntityType.MvtosBancariosCbEntity
					factoryToUse = New MvtosBancariosCbEntityFactory()
				Case Integralab.ORM.EntityType.NomCatEmpleadosEntity
					factoryToUse = New NomCatEmpleadosEntityFactory()
				Case Integralab.ORM.EntityType.NomCatPuestosEntity
					factoryToUse = New NomCatPuestosEntityFactory()
				Case Integralab.ORM.EntityType.NomConfiguracionEntity
					factoryToUse = New NomConfiguracionEntityFactory()
				Case Integralab.ORM.EntityType.NomDiasVacacionesEntity
					factoryToUse = New NomDiasVacacionesEntityFactory()
				Case Integralab.ORM.EntityType.NomImportesEntity
					factoryToUse = New NomImportesEntityFactory()
				Case Integralab.ORM.EntityType.NomImssinfonavitEntity
					factoryToUse = New NomImssinfonavitEntityFactory()
				Case Integralab.ORM.EntityType.NomIsrEntity
					factoryToUse = New NomIsrEntityFactory()
				Case Integralab.ORM.EntityType.NomSubsidioEmpleoEntity
					factoryToUse = New NomSubsidioEmpleoEntityFactory()
				Case Integralab.ORM.EntityType.NotaCreditoCabEntity
					factoryToUse = New NotaCreditoCabEntityFactory()
				Case Integralab.ORM.EntityType.NotaCreditoDetEntity
					factoryToUse = New NotaCreditoDetEntityFactory()
				Case Integralab.ORM.EntityType.NotaVentaEntity
					factoryToUse = New NotaVentaEntityFactory()
				Case Integralab.ORM.EntityType.NotaVentaDetalleEntity
					factoryToUse = New NotaVentaDetalleEntityFactory()
				Case Integralab.ORM.EntityType.NotaVentaDetalleRespEntity
					factoryToUse = New NotaVentaDetalleRespEntityFactory()
				Case Integralab.ORM.EntityType.NotaVentaRespEntity
					factoryToUse = New NotaVentaRespEntityFactory()
				Case Integralab.ORM.EntityType.OrdenCompraEntity
					factoryToUse = New OrdenCompraEntityFactory()
				Case Integralab.ORM.EntityType.OrdenCompraDetalleEntity
					factoryToUse = New OrdenCompraDetalleEntityFactory()
				Case Integralab.ORM.EntityType.OrdenServicioEntity
					factoryToUse = New OrdenServicioEntityFactory()
				Case Integralab.ORM.EntityType.OrdenServicioDetalleEntity
					factoryToUse = New OrdenServicioDetalleEntityFactory()
				Case Integralab.ORM.EntityType.PagoCheDevueltoCabEntity
					factoryToUse = New PagoCheDevueltoCabEntityFactory()
				Case Integralab.ORM.EntityType.PagoCheDevueltoDetEntity
					factoryToUse = New PagoCheDevueltoDetEntityFactory()
				Case Integralab.ORM.EntityType.PagoDeCtesEntity
					factoryToUse = New PagoDeCtesEntityFactory()
				Case Integralab.ORM.EntityType.PeriodosContEntity
					factoryToUse = New PeriodosContEntityFactory()
				Case Integralab.ORM.EntityType.PlazaEntity
					factoryToUse = New PlazaEntityFactory()
				Case Integralab.ORM.EntityType.PoblacionEntity
					factoryToUse = New PoblacionEntityFactory()
				Case Integralab.ORM.EntityType.PogrCbEntity
					factoryToUse = New PogrCbEntityFactory()
				Case Integralab.ORM.EntityType.PoGrDtEntity
					factoryToUse = New PoGrDtEntityFactory()
				Case Integralab.ORM.EntityType.PolizaEntity
					factoryToUse = New PolizaEntityFactory()
				Case Integralab.ORM.EntityType.PolizaDetalleEntity
					factoryToUse = New PolizaDetalleEntityFactory()
				Case Integralab.ORM.EntityType.PolizasModeloCabEntity
					factoryToUse = New PolizasModeloCabEntityFactory()
				Case Integralab.ORM.EntityType.PolizasModeloDetEntity
					factoryToUse = New PolizasModeloDetEntityFactory()
				Case Integralab.ORM.EntityType.PresentacionEntity
					factoryToUse = New PresentacionEntityFactory()
				Case Integralab.ORM.EntityType.PresupuestoEntity
					factoryToUse = New PresupuestoEntityFactory()
				Case Integralab.ORM.EntityType.PresupuestoCompraDetalleEntity
					factoryToUse = New PresupuestoCompraDetalleEntityFactory()
				Case Integralab.ORM.EntityType.ProductoEntity
					factoryToUse = New ProductoEntityFactory()
				Case Integralab.ORM.EntityType.ProductoCostoIndirectoEntity
					factoryToUse = New ProductoCostoIndirectoEntityFactory()
				Case Integralab.ORM.EntityType.ProductoDerivadoEntity
					factoryToUse = New ProductoDerivadoEntityFactory()
				Case Integralab.ORM.EntityType.ProductoMezclaEntity
					factoryToUse = New ProductoMezclaEntityFactory()
				Case Integralab.ORM.EntityType.ProrraRecEntity
					factoryToUse = New ProrraRecEntityFactory()
				Case Integralab.ORM.EntityType.ProveedorEntity
					factoryToUse = New ProveedorEntityFactory()
				Case Integralab.ORM.EntityType.ProveedorAvanzadoEntity
					factoryToUse = New ProveedorAvanzadoEntityFactory()
				Case Integralab.ORM.EntityType.PvnotasVentaRetCabEntity
					factoryToUse = New PvnotasVentaRetCabEntityFactory()
				Case Integralab.ORM.EntityType.PvnotasVentaRetDetEntity
					factoryToUse = New PvnotasVentaRetDetEntityFactory()
				Case Integralab.ORM.EntityType.RecepcionGanadoEntity
					factoryToUse = New RecepcionGanadoEntityFactory()
				Case Integralab.ORM.EntityType.RecepcionOrdenCompraEntity
					factoryToUse = New RecepcionOrdenCompraEntityFactory()
				Case Integralab.ORM.EntityType.ReferenciaProductoDerivadoEntity
					factoryToUse = New ReferenciaProductoDerivadoEntityFactory()
				Case Integralab.ORM.EntityType.RegistroSacrificiosCabEntity
					factoryToUse = New RegistroSacrificiosCabEntityFactory()
				Case Integralab.ORM.EntityType.RegistroSacrificiosDecomisosEntity
					factoryToUse = New RegistroSacrificiosDecomisosEntityFactory()
				Case Integralab.ORM.EntityType.RegistroSacrificiosDetEntity
					factoryToUse = New RegistroSacrificiosDetEntityFactory()
				Case Integralab.ORM.EntityType.RetiroCajaEntity
					factoryToUse = New RetiroCajaEntityFactory()
				Case Integralab.ORM.EntityType.RFCEntity
					factoryToUse = New RFCEntityFactory()
				Case Integralab.ORM.EntityType.SalidaGanadoCabEntity
					factoryToUse = New SalidaGanadoCabEntityFactory()
				Case Integralab.ORM.EntityType.SalidaGanadoDetEntity
					factoryToUse = New SalidaGanadoDetEntityFactory()
				Case Integralab.ORM.EntityType.SatAgrupadorEntity
					factoryToUse = New SatAgrupadorEntityFactory()
				Case Integralab.ORM.EntityType.ServiciosEntity
					factoryToUse = New ServiciosEntityFactory()
				Case Integralab.ORM.EntityType.ServiciosPorSacrificioEntity
					factoryToUse = New ServiciosPorSacrificioEntityFactory()
				Case Integralab.ORM.EntityType.ServiciosXembarqueEntity
					factoryToUse = New ServiciosXembarqueEntityFactory()
				Case Integralab.ORM.EntityType.SolicitudProductoEntity
					factoryToUse = New SolicitudProductoEntityFactory()
				Case Integralab.ORM.EntityType.SolicitudProductoDetalleEntity
					factoryToUse = New SolicitudProductoDetalleEntityFactory()
				Case Integralab.ORM.EntityType.SolicitudServiciosEntity
					factoryToUse = New SolicitudServiciosEntityFactory()
				Case Integralab.ORM.EntityType.SolicitudServiciosDetalleEntity
					factoryToUse = New SolicitudServiciosDetalleEntityFactory()
				Case Integralab.ORM.EntityType.SubLineaEntity
					factoryToUse = New SubLineaEntityFactory()
				Case Integralab.ORM.EntityType.SucursalEntity
					factoryToUse = New SucursalEntityFactory()
				Case Integralab.ORM.EntityType.TipoAlmacenEntity
					factoryToUse = New TipoAlmacenEntityFactory()
				Case Integralab.ORM.EntityType.TipoCambioEntity
					factoryToUse = New TipoCambioEntityFactory()
				Case Integralab.ORM.EntityType.TipoComicionistaEntity
					factoryToUse = New TipoComicionistaEntityFactory()
				Case Integralab.ORM.EntityType.TipoMonedaEntity
					factoryToUse = New TipoMonedaEntityFactory()
				Case Integralab.ORM.EntityType.TipoMotivoEntity
					factoryToUse = New TipoMotivoEntityFactory()
				Case Integralab.ORM.EntityType.TipoMovimientoAlmacenEntity
					factoryToUse = New TipoMovimientoAlmacenEntityFactory()
				Case Integralab.ORM.EntityType.TipoPresupuestoEntity
					factoryToUse = New TipoPresupuestoEntityFactory()
				Case Integralab.ORM.EntityType.TipoProductoEntity
					factoryToUse = New TipoProductoEntityFactory()
				Case Integralab.ORM.EntityType.TipoProveedorEntity
					factoryToUse = New TipoProveedorEntityFactory()
				Case Integralab.ORM.EntityType.TipoVentaEntity
					factoryToUse = New TipoVentaEntityFactory()
				Case Integralab.ORM.EntityType.UnidadMedidaEntity
					factoryToUse = New UnidadMedidaEntityFactory()
				Case Integralab.ORM.EntityType.UsrBanDepositosEntity
					factoryToUse = New UsrBanDepositosEntityFactory()
				Case Integralab.ORM.EntityType.UsrConfigContabilidadEntity
					factoryToUse = New UsrConfigContabilidadEntityFactory()
				Case Integralab.ORM.EntityType.UsrCxpfacturasApagarEntity
					factoryToUse = New UsrCxpfacturasApagarEntityFactory()
				Case Integralab.ORM.EntityType.UsrCxpfacturasCabEntity
					factoryToUse = New UsrCxpfacturasCabEntityFactory()
				Case Integralab.ORM.EntityType.UsrCxpfacturasDetEntity
					factoryToUse = New UsrCxpfacturasDetEntityFactory()
				Case Integralab.ORM.EntityType.UsrCxpfacturasDetRecepcionesEntity
					factoryToUse = New UsrCxpfacturasDetRecepcionesEntityFactory()
				Case Integralab.ORM.EntityType.UsrCxppagosProveedoresEntity
					factoryToUse = New UsrCxppagosProveedoresEntityFactory()
				Case Integralab.ORM.EntityType.UsrProdConfiguracionEntity
					factoryToUse = New UsrProdConfiguracionEntityFactory()
				Case Integralab.ORM.EntityType.UsrProdRecepcionDetalleEntity
					factoryToUse = New UsrProdRecepcionDetalleEntityFactory()
				Case Integralab.ORM.EntityType.UsrProdRecepcionGanadoDetEntity
					factoryToUse = New UsrProdRecepcionGanadoDetEntityFactory()
				Case Integralab.ORM.EntityType.UsrProdRegistroSacrificiosDecomisoEntity
					factoryToUse = New UsrProdRegistroSacrificiosDecomisoEntityFactory()
				Case Integralab.ORM.EntityType.UsuariosSucursalEntity
					factoryToUse = New UsuariosSucursalEntityFactory()
				Case Integralab.ORM.EntityType.UsuarioSucursalEntity
					factoryToUse = New UsuarioSucursalEntityFactory()
				Case Integralab.ORM.EntityType.ZonaEntity
					factoryToUse = New ZonaEntityFactory()
				Case Integralab.ORM.EntityType.ZonaDetalleEntity
					factoryToUse = New ZonaDetalleEntityFactory()
			End Select
			
			Return factoryToUse.Create()
		End Function		
	End Class

End Namespace
